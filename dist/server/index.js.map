{
  "version": 3,
  "sources": ["../../node_modules/ms/index.js", "../../node_modules/debug/src/common.js", "../../node_modules/debug/src/browser.js", "../../node_modules/has-flag/index.js", "../../node_modules/supports-color/index.js", "../../node_modules/debug/src/node.js", "../../node_modules/debug/src/index.js", "../../node_modules/eventemitter3/index.js", "../../node_modules/ws/lib/constants.js", "../../node_modules/ws/lib/buffer-util.js", "../../node_modules/ws/lib/limiter.js", "../../node_modules/ws/lib/permessage-deflate.js", "../../node_modules/ws/lib/validation.js", "../../node_modules/ws/lib/receiver.js", "../../node_modules/ws/lib/sender.js", "../../node_modules/ws/lib/event-target.js", "../../node_modules/ws/lib/extension.js", "../../node_modules/ws/lib/websocket.js", "../../node_modules/ws/lib/stream.js", "../../node_modules/ws/lib/subprotocol.js", "../../node_modules/ws/lib/websocket-server.js", "../../node_modules/ws/index.js", "../../node_modules/isomorphic-ws/node.js", "../../node_modules/crypto-js/core.js", "../../node_modules/crypto-js/sha256.js", "../../node_modules/crypto-js/enc-base64.js", "../../node_modules/@msgpack/msgpack/src/utils/int.ts", "../../node_modules/@msgpack/msgpack/src/utils/utf8.ts", "../../node_modules/@msgpack/msgpack/src/ExtData.ts", "../../node_modules/@msgpack/msgpack/src/DecodeError.ts", "../../node_modules/@msgpack/msgpack/src/timestamp.ts", "../../node_modules/@msgpack/msgpack/src/ExtensionCodec.ts", "../../node_modules/@msgpack/msgpack/src/utils/typedArrays.ts", "../../node_modules/@msgpack/msgpack/src/Encoder.ts", "../../node_modules/@msgpack/msgpack/src/encode.ts", "../../node_modules/@msgpack/msgpack/src/utils/prettyByte.ts", "../../node_modules/@msgpack/msgpack/src/CachedKeyDecoder.ts", "../../node_modules/@msgpack/msgpack/src/Decoder.ts", "../../node_modules/@msgpack/msgpack/src/decode.ts", "../../node_modules/@msgpack/msgpack/src/utils/stream.ts", "../../node_modules/@msgpack/msgpack/src/decodeAsync.ts", "../../node_modules/@msgpack/msgpack/src/index.ts", "../../node_modules/@deskthing/types/dist/apps/appSettings.js", "../../node_modules/@deskthing/types/dist/deskthing/deskthingTransit.js", "../../node_modules/@deskthing/server/dist/index.js", "../../node_modules/obs-websocket-js/src/types.ts", "../../node_modules/obs-websocket-js/src/base.ts", "../../node_modules/obs-websocket-js/src/utils/authenticationHashing.ts", "../../node_modules/eventemitter3/index.mjs", "../../node_modules/obs-websocket-js/src/msgpack.ts", "../../src/stores/defaultSettings.js", "../../server/obsStore.ts", "../../server/setupSettings.ts", "../../server/obsController.ts", "../../server/index.ts"],
  "sourcesContent": ["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet flagForceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tflagForceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m') ||\n\t\t\thasFlag('color=full') ||\n\t\t\thasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream, options = {}) {\n\tconst level = supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options\n\t});\n\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel({isTTY: tty.isatty(1)}),\n\tstderr: getSupportLevel({isTTY: tty.isatty(2)})\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n", "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n", "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n", "'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n", "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 13 && version !== 8) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message, {\n        'Sec-WebSocket-Version': '13, 8'\n      });\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @param {Object} [headers] The HTTP response headers\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(\n  server,\n  req,\n  socket,\n  code,\n  message,\n  headers\n) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message, headers);\n  }\n}\n", "'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n", "\"use strict\";\n\nmodule.exports = require('ws');", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));", "// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int\";\n\nconst TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process?.env?.[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n", "/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n", "export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n", "// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError\";\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n", "// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n", "export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n", "import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport type { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType = undefined> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.slice(0, this.pos);\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n", "import { Encoder } from \"./Encoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * The maximum depth in nested objects and arrays.\n     *\n     * Defaults to 100.\n     */\n    maxDepth: number;\n\n    /**\n     * The initial size of the internal buffer.\n     *\n     * Defaults to 2048.\n     */\n    initialBufferSize: number;\n\n    /**\n     * If `true`, the keys of an object is sorted. In other words, the encoded\n     * binary is canonical and thus comparable to another encoded binary.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    sortKeys: boolean;\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     *\n     * Defaults to `false`.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point numbers,\n     * with the `forceFloat32` option taken into account.\n     *\n     * Defaults to `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encodeSharedRef(value);\n}\n", "export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n", "import { utf8DecodeJs } from \"./utils/utf8\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n", "import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\nimport { DecodeError } from \"./DecodeError\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e: any) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = UINT32_MAX,\n    private readonly maxBinLength = UINT32_MAX,\n    private readonly maxArrayLength = UINT32_MAX,\n    private readonly maxMapLength = UINT32_MAX,\n    private readonly maxExtLength = UINT32_MAX,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining(1)) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n", "// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport { ensureAsyncIterable } from \"./utils/stream\";\nimport { defaultDecodeOptions } from \"./decode\";\nimport type { ReadableStreamLike } from \"./utils/stream\";\nimport type { DecodeOptions } from \"./decode\";\nimport type { SplitUndefined } from \"./context\";\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  return decodeMultiStream(streamLike, options);\n}\n", "// Main Functions:\n\nimport { encode } from \"./encode\";\nexport { encode };\nimport type { EncodeOptions } from \"./encode\";\nexport type { EncodeOptions };\n\nimport { decode, decodeMulti } from \"./decode\";\nexport { decode, decodeMulti };\nimport type { DecodeOptions } from \"./decode\";\nexport { DecodeOptions };\n\nimport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream } from \"./decodeAsync\";\nexport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream };\n\nimport { Decoder, DataViewIndexOutOfBoundsError } from \"./Decoder\";\nimport { DecodeError } from \"./DecodeError\";\nexport { Decoder, DecodeError, DataViewIndexOutOfBoundsError };\n\nimport { Encoder } from \"./Encoder\";\nexport { Encoder };\n\n// Utilitiies for Extension Types:\n\nimport { ExtensionCodec } from \"./ExtensionCodec\";\nexport { ExtensionCodec };\nimport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType } from \"./ExtensionCodec\";\nexport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType };\nimport { ExtData } from \"./ExtData\";\nexport { ExtData };\n\nimport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n} from \"./timestamp\";\nexport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n};\n", "/**\n * The different types of available settings\n * @since 0.11.0\n */\nexport var SETTING_TYPES;\n(function (SETTING_TYPES) {\n    SETTING_TYPES[\"BOOLEAN\"] = \"boolean\";\n    SETTING_TYPES[\"NUMBER\"] = \"number\";\n    SETTING_TYPES[\"STRING\"] = \"string\";\n    SETTING_TYPES[\"RANGE\"] = \"range\";\n    SETTING_TYPES[\"SELECT\"] = \"select\";\n    SETTING_TYPES[\"MULTISELECT\"] = \"multiselect\";\n    SETTING_TYPES[\"LIST\"] = \"list\";\n    SETTING_TYPES[\"RANKED\"] = \"ranked\";\n    SETTING_TYPES[\"COLOR\"] = \"color\";\n    SETTING_TYPES[\"FILE\"] = \"file\";\n})(SETTING_TYPES || (SETTING_TYPES = {}));\n", "/**\n * All data that is sent from the DeskThing Server to the Client\n * @package DeskThingServer + DeskThingClient\n */\nexport var DESKTHING_DEVICE;\n(function (DESKTHING_DEVICE) {\n    /** Will never be emitted to your client. Only exists on device */\n    DESKTHING_DEVICE[\"GLOBAL_SETTINGS\"] = \"global_settings\";\n    /** Will never be emitted to your client. Only exists on device */\n    DESKTHING_DEVICE[\"MAPPINGS\"] = \"button_mappings\";\n    /** Will never be emitted to your client. Only exists on device */\n    DESKTHING_DEVICE[\"CONFIG\"] = \"configuration\";\n    /** Will never be emitted to your client. Only exists on device */\n    DESKTHING_DEVICE[\"GET\"] = \"get\";\n    /** Will never be emitted to your client. Only exists on device */\n    DESKTHING_DEVICE[\"ERROR\"] = \"error\";\n    DESKTHING_DEVICE[\"PONG\"] = \"pong\";\n    DESKTHING_DEVICE[\"PING\"] = \"ping\";\n    DESKTHING_DEVICE[\"SETTINGS\"] = \"settings\";\n    DESKTHING_DEVICE[\"APPS\"] = \"apps\";\n    DESKTHING_DEVICE[\"TIME\"] = \"time\";\n    DESKTHING_DEVICE[\"HEARTBEAT\"] = \"heartbeat\";\n    DESKTHING_DEVICE[\"META_DATA\"] = \"meta_data\";\n    DESKTHING_DEVICE[\"MUSIC\"] = \"music\";\n    DESKTHING_DEVICE[\"ICON\"] = \"icon\";\n})(DESKTHING_DEVICE || (DESKTHING_DEVICE = {}));\n/**\n * Enum representing the different types of events that can be emitted by the DeskThing class.\n * @readonly\n * @since 0.10.4\n * @enum {string}\n */\nexport var DESKTHING_EVENTS;\n(function (DESKTHING_EVENTS) {\n    /**\n     * @deprecated - No longer used\n     * Raw message event from the server\n     */\n    DESKTHING_EVENTS[\"MESSAGE\"] = \"message\";\n    /**\n     * Data response from getData()\n     * Triggered whenever data is updated on the server\n     * @remark Does not trigger when settings update. Use {@link DESKTHING_EVENTS.SETTINGS} instead\n     * */\n    DESKTHING_EVENTS[\"DATA\"] = \"data\";\n    /**\n     * The full appDataInterface object\n     * Triggered whenever data is updated on the server\n     * */\n    DESKTHING_EVENTS[\"APPDATA\"] = \"appdata\";\n    /**\n     * Response data from callback functions\n     * Usually from oAuth flows\n     */\n    DESKTHING_EVENTS[\"CALLBACK_DATA\"] = \"callback-data\";\n    /**\n     * Server signals app to start\n     * Triggered when the server initializes the app\n     */\n    DESKTHING_EVENTS[\"START\"] = \"start\";\n    /**\n     * Server signals app to stop\n     * Triggered when the server needs to shutdown the app\n     */\n    DESKTHING_EVENTS[\"STOP\"] = \"stop\";\n    /**\n     * Server signals to purge app data\n     * Triggered when all app data should be deleted\n     */\n    DESKTHING_EVENTS[\"PURGE\"] = \"purge\";\n    /**\n     * User input form response data\n     * Contains data submitted by users through forms\n     */\n    DESKTHING_EVENTS[\"INPUT\"] = \"input\";\n    /**\n     * Response from user action/interaction\n     * Contains data from user-triggered events or interactions\n     * @param data.payload is the triggering {@link Action}. Use the action.id to determine the action\n     */\n    DESKTHING_EVENTS[\"ACTION\"] = \"action\";\n    /**\n     * App configuration data (deprecated)\n     * Legacy configuration system, use SETTINGS instead\n     * @deprecated - Use {@link DESKTHING_EVENTS.SETTINGS} instead\n     */\n    DESKTHING_EVENTS[\"CONFIG\"] = \"config\";\n    /**\n     * App settings data\n     * Contains current application settings and preferences\n     * Can sometimes be partial. So be warned.\n     */\n    DESKTHING_EVENTS[\"SETTINGS\"] = \"settings\";\n    /**\n     * Updated task data. Will be triggered with the task data\n     * Requests include \"update\", \"task\", and \"step\"\n     */\n    DESKTHING_EVENTS[\"TASKS\"] = \"tasks\";\n    /**\n     * Connection data. Will be triggered when a client connects or disconnects\n     * request includes \"connected\", \"disconnected\", \"opened\", \"closed\"\n     */\n    DESKTHING_EVENTS[\"CLIENT_STATUS\"] = \"client_status\";\n})(DESKTHING_EVENTS || (DESKTHING_EVENTS = {}));\n", "// src/deskthing.ts\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport { Worker } from \"worker_threads\";\n\n// node_modules/@deskthing/types/dist/apps/appSettings.js\nvar SETTING_TYPES;\n(function(SETTING_TYPES2) {\n  SETTING_TYPES2[\"BOOLEAN\"] = \"boolean\";\n  SETTING_TYPES2[\"NUMBER\"] = \"number\";\n  SETTING_TYPES2[\"STRING\"] = \"string\";\n  SETTING_TYPES2[\"RANGE\"] = \"range\";\n  SETTING_TYPES2[\"SELECT\"] = \"select\";\n  SETTING_TYPES2[\"MULTISELECT\"] = \"multiselect\";\n  SETTING_TYPES2[\"LIST\"] = \"list\";\n  SETTING_TYPES2[\"RANKED\"] = \"ranked\";\n  SETTING_TYPES2[\"COLOR\"] = \"color\";\n  SETTING_TYPES2[\"FILE\"] = \"file\";\n})(SETTING_TYPES || (SETTING_TYPES = {}));\n\n// node_modules/@deskthing/types/dist/apps/appTasks.js\nvar STEP_TYPES;\n(function(STEP_TYPES2) {\n  STEP_TYPES2[\"ACTION\"] = \"action\";\n  STEP_TYPES2[\"SHORTCUT\"] = \"shortcut\";\n  STEP_TYPES2[\"SETTING\"] = \"setting\";\n  STEP_TYPES2[\"TASK\"] = \"task\";\n  STEP_TYPES2[\"EXTERNAL\"] = \"external\";\n  STEP_TYPES2[\"STEP\"] = \"step\";\n})(STEP_TYPES || (STEP_TYPES = {}));\n\n// node_modules/@deskthing/types/dist/apps/appTransit.js\nvar APP_REQUESTS;\n(function(APP_REQUESTS2) {\n  APP_REQUESTS2[\"DEFAULT\"] = \"default\";\n  APP_REQUESTS2[\"GET\"] = \"get\";\n  APP_REQUESTS2[\"SET\"] = \"set\";\n  APP_REQUESTS2[\"DELETE\"] = \"delete\";\n  APP_REQUESTS2[\"OPEN\"] = \"open\";\n  APP_REQUESTS2[\"SEND\"] = \"send\";\n  APP_REQUESTS2[\"TOAPP\"] = \"toApp\";\n  APP_REQUESTS2[\"LOG\"] = \"log\";\n  APP_REQUESTS2[\"KEY\"] = \"key\";\n  APP_REQUESTS2[\"ACTION\"] = \"action\";\n  APP_REQUESTS2[\"TASK\"] = \"task\";\n  APP_REQUESTS2[\"STEP\"] = \"step\";\n  APP_REQUESTS2[\"SONG\"] = \"song\";\n})(APP_REQUESTS || (APP_REQUESTS = {}));\n\n// node_modules/@deskthing/types/dist/deskthing/deskthingTransit.js\nvar DESKTHING_DEVICE;\n(function(DESKTHING_DEVICE2) {\n  DESKTHING_DEVICE2[\"GLOBAL_SETTINGS\"] = \"global_settings\";\n  DESKTHING_DEVICE2[\"MAPPINGS\"] = \"button_mappings\";\n  DESKTHING_DEVICE2[\"CONFIG\"] = \"configuration\";\n  DESKTHING_DEVICE2[\"GET\"] = \"get\";\n  DESKTHING_DEVICE2[\"ERROR\"] = \"error\";\n  DESKTHING_DEVICE2[\"PONG\"] = \"pong\";\n  DESKTHING_DEVICE2[\"PING\"] = \"ping\";\n  DESKTHING_DEVICE2[\"SETTINGS\"] = \"settings\";\n  DESKTHING_DEVICE2[\"APPS\"] = \"apps\";\n  DESKTHING_DEVICE2[\"TIME\"] = \"time\";\n  DESKTHING_DEVICE2[\"HEARTBEAT\"] = \"heartbeat\";\n  DESKTHING_DEVICE2[\"META_DATA\"] = \"meta_data\";\n  DESKTHING_DEVICE2[\"MUSIC\"] = \"music\";\n  DESKTHING_DEVICE2[\"ICON\"] = \"icon\";\n})(DESKTHING_DEVICE || (DESKTHING_DEVICE = {}));\nvar DESKTHING_EVENTS;\n(function(DESKTHING_EVENTS2) {\n  DESKTHING_EVENTS2[\"MESSAGE\"] = \"message\";\n  DESKTHING_EVENTS2[\"DATA\"] = \"data\";\n  DESKTHING_EVENTS2[\"APPDATA\"] = \"appdata\";\n  DESKTHING_EVENTS2[\"CALLBACK_DATA\"] = \"callback-data\";\n  DESKTHING_EVENTS2[\"START\"] = \"start\";\n  DESKTHING_EVENTS2[\"STOP\"] = \"stop\";\n  DESKTHING_EVENTS2[\"PURGE\"] = \"purge\";\n  DESKTHING_EVENTS2[\"INPUT\"] = \"input\";\n  DESKTHING_EVENTS2[\"ACTION\"] = \"action\";\n  DESKTHING_EVENTS2[\"CONFIG\"] = \"config\";\n  DESKTHING_EVENTS2[\"SETTINGS\"] = \"settings\";\n  DESKTHING_EVENTS2[\"TASKS\"] = \"tasks\";\n  DESKTHING_EVENTS2[\"CLIENT_STATUS\"] = \"client_status\";\n})(DESKTHING_EVENTS || (DESKTHING_EVENTS = {}));\n\n// node_modules/@deskthing/types/dist/deskthing/mappings.js\nvar EventFlavor;\n(function(EventFlavor2) {\n  EventFlavor2[EventFlavor2[\"KeyUp\"] = 0] = \"KeyUp\";\n  EventFlavor2[EventFlavor2[\"KeyDown\"] = 1] = \"KeyDown\";\n  EventFlavor2[EventFlavor2[\"ScrollUp\"] = 2] = \"ScrollUp\";\n  EventFlavor2[EventFlavor2[\"ScrollDown\"] = 3] = \"ScrollDown\";\n  EventFlavor2[EventFlavor2[\"ScrollLeft\"] = 4] = \"ScrollLeft\";\n  EventFlavor2[EventFlavor2[\"ScrollRight\"] = 5] = \"ScrollRight\";\n  EventFlavor2[EventFlavor2[\"SwipeUp\"] = 6] = \"SwipeUp\";\n  EventFlavor2[EventFlavor2[\"SwipeDown\"] = 7] = \"SwipeDown\";\n  EventFlavor2[EventFlavor2[\"SwipeLeft\"] = 8] = \"SwipeLeft\";\n  EventFlavor2[EventFlavor2[\"SwipeRight\"] = 9] = \"SwipeRight\";\n  EventFlavor2[EventFlavor2[\"PressShort\"] = 10] = \"PressShort\";\n  EventFlavor2[EventFlavor2[\"PressLong\"] = 11] = \"PressLong\";\n})(EventFlavor || (EventFlavor = {}));\nvar EventMode;\n(function(EventMode3) {\n  EventMode3[EventMode3[\"KeyUp\"] = 0] = \"KeyUp\";\n  EventMode3[EventMode3[\"KeyDown\"] = 1] = \"KeyDown\";\n  EventMode3[EventMode3[\"ScrollUp\"] = 2] = \"ScrollUp\";\n  EventMode3[EventMode3[\"ScrollDown\"] = 3] = \"ScrollDown\";\n  EventMode3[EventMode3[\"ScrollLeft\"] = 4] = \"ScrollLeft\";\n  EventMode3[EventMode3[\"ScrollRight\"] = 5] = \"ScrollRight\";\n  EventMode3[EventMode3[\"SwipeUp\"] = 6] = \"SwipeUp\";\n  EventMode3[EventMode3[\"SwipeDown\"] = 7] = \"SwipeDown\";\n  EventMode3[EventMode3[\"SwipeLeft\"] = 8] = \"SwipeLeft\";\n  EventMode3[EventMode3[\"SwipeRight\"] = 9] = \"SwipeRight\";\n  EventMode3[EventMode3[\"PressShort\"] = 10] = \"PressShort\";\n  EventMode3[EventMode3[\"PressLong\"] = 11] = \"PressLong\";\n})(EventMode || (EventMode = {}));\n\n// src/actions/actionUtils.ts\nvar isValidAction = (action) => {\n  if (!action || typeof action !== \"object\") throw new Error(\"Action must be an object\");\n  const actionObj = action;\n  if (typeof actionObj.id !== \"string\") throw new Error(\"Action id must be a string\");\n  if (typeof actionObj.version !== \"string\") {\n    throw new Error(\"Action version must be a string\");\n  }\n  if (typeof actionObj.enabled !== \"boolean\") {\n    throw new Error(\"Action enabled must be a boolean\");\n  }\n  if (typeof actionObj.name !== \"string\") {\n    throw new Error(\"Action name must be a string\");\n  }\n  if (typeof actionObj.version_code !== \"number\") {\n    throw new Error(\"Action version_code must be a number\");\n  }\n  if (actionObj.description !== void 0 && typeof actionObj.description !== \"string\") {\n    throw new Error(\"Action description must be a string\");\n  }\n  if (actionObj.value !== void 0 && typeof actionObj.value !== \"string\") {\n    throw new Error(\"Action value must be a string\");\n  }\n  if (actionObj.value_options !== void 0 && !Array.isArray(actionObj.value_options)) {\n    throw new Error(\"Action value_options must be an array of strings\");\n  }\n  if (actionObj.value_instructions !== void 0 && typeof actionObj.value_instructions !== \"string\") {\n    throw new Error(\"Action value_instructions must be a string\");\n  }\n  if (actionObj.icon !== void 0 && typeof actionObj.icon !== \"string\") {\n    throw new Error(\"Action icon must be a string\");\n  }\n  if (actionObj.tag !== void 0 && ![\"nav\", \"media\", \"basic\"].includes(actionObj.tag)) {\n    throw new Error(\"Action tag must be one of: nav, media, basic\");\n  }\n};\nvar isValidActionReference = (action) => {\n  if (typeof action !== \"object\" || !action) {\n    throw new Error(\"validateActionReference: action is not a valid object\");\n  }\n  const actionRef = action;\n  if (typeof actionRef.id !== \"string\") {\n    throw new Error(\"validateActionReference: id is not a valid string\");\n  }\n  if (typeof actionRef.enabled !== \"boolean\") {\n    action.enabled = true;\n    console.warn(\n      \"validateActionReference: enabled was not set to a boolean value\"\n    );\n  }\n};\n\n// src/tasks/taskUtils.ts\nfunction isValidTask(task) {\n  if (!task || typeof task !== \"object\")\n    throw new Error(\"Task must be an object\");\n  const t = task;\n  if (!t.id) {\n    throw new Error(\"[ValidateTask] Tasks must have an ID\");\n  }\n  if (!t.source) {\n    throw new Error(`[ValidateTask] Task ${t.id} does not have a source`);\n  }\n  if (!t.version) {\n    throw new Error(\n      `[ValidateTask] Task ${t.id} from ${t.source} must have a specified version`\n    );\n  }\n  if (!t.steps || typeof t.steps !== \"object\" || Object.values(t.steps).length === 0) {\n    throw new Error(\n      `[ValidateTask] Task ${t.id} from ${t.source} must have at least one specified step`\n    );\n  }\n  for (const step of Object.values(t.steps)) {\n    isValidStep(step);\n  }\n}\nfunction isValidStep(step) {\n  if (!step || typeof step !== \"object\")\n    throw new Error(\"Step must be an object\");\n  const s = step;\n  if (!s.id) {\n    throw new Error(\"[ValidateStep] Step must have an ID\");\n  }\n  if (!s.type) {\n    throw new Error(`[ValidateStep] Step ${s.id} does not have a type`);\n  }\n  switch (s.type) {\n    case STEP_TYPES.ACTION:\n      isValidTaskAction(s);\n      break;\n    case STEP_TYPES.SHORTCUT:\n      isValidTaskShortcut(s);\n      break;\n    case STEP_TYPES.SETTING:\n      isValidTaskSetting(s);\n      break;\n    case STEP_TYPES.TASK:\n      isValidTaskTask(s);\n      break;\n    case STEP_TYPES.EXTERNAL:\n      isValidTaskExternal(s);\n      break;\n    case STEP_TYPES.STEP:\n      isValidTaskStep(s);\n      break;\n    default:\n      throw new Error(`[ValidateStep] Step ${s.id} has invalid type ${s.type}`);\n  }\n}\nfunction validateStepBase(step, expectedType) {\n  if (!step || typeof step !== \"object\")\n    throw new Error(\"Step must be an object\");\n  const s = step;\n  if (!s.type) {\n    throw new Error(\"[ValidateStep] Step must have a type\");\n  }\n  if (s.type !== expectedType) {\n    throw new Error(`[ValidateStep] Step ${s.id} is not a ${expectedType}`);\n  }\n}\nfunction isValidTaskAction(step) {\n  validateStepBase(step, STEP_TYPES.ACTION);\n  const s = step;\n  if (!s.action) {\n    throw new Error(\n      `[ValidateTaskAction] Step ${s.id} does not have an action`\n    );\n  }\n  const action = s.action;\n  if (typeof action === \"string\") {\n    return;\n  }\n  try {\n    if (typeof action === \"object\" && \"version\" in action) {\n      isValidAction(action);\n    } else {\n      isValidActionReference(action);\n    }\n  } catch (error) {\n    console.error(`There was an error validating the task action`, error);\n  }\n}\nfunction isValidTaskShortcut(step) {\n  validateStepBase(step, STEP_TYPES.SHORTCUT);\n  const s = step;\n  if (!s.destination) {\n    throw new Error(\n      `[ValidateTaskShortcut] Step ${s.id} does not have a destination`\n    );\n  }\n}\nfunction isValidTaskSetting(step) {\n  validateStepBase(step, STEP_TYPES.SETTING);\n  const s = step;\n  if (!s.setting) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} does not have a setting`\n    );\n  }\n  if (!(\"type\" in s.setting)) {\n    if (!s.setting.id) throw new Error(`[ValidateTaskSetting] Setting reference does not have an id`);\n    return;\n  }\n  const validTypes = Object.values(SETTING_TYPES);\n  if (!s.setting.type || !validTypes.includes(s.setting.type)) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} has invalid setting type`\n    );\n  }\n  if (!s.setting.label) {\n    throw new Error(\n      `[ValidateTaskSetting] Step ${s.id} setting does not have a label`\n    );\n  }\n}\nfunction isValidTaskTask(step) {\n  validateStepBase(step, STEP_TYPES.TASK);\n  const s = step;\n  if (!s.taskReference?.id) {\n    throw new Error(`[ValidateTaskTask] Step ${s.id} does not have a taskId`);\n  }\n}\nfunction isValidTaskExternal(step) {\n  validateStepBase(step, STEP_TYPES.EXTERNAL);\n}\nfunction isValidTaskStep(step) {\n  validateStepBase(step, STEP_TYPES.STEP);\n}\n\n// src/settings/settingsUtils.ts\nvar isValidSettings = (setting) => {\n  if (!setting) {\n    throw new Error(\"[isValidSetting] Setting must be a valid object\");\n  }\n  if (typeof setting !== \"object\") {\n    throw new Error(\"[isValidSetting] Setting must be an object\");\n  }\n  if (\"type\" in setting && typeof setting.type !== \"string\") {\n    throw new Error(\"[isValidSetting] Setting type must be a string\");\n  }\n  if (\"label\" in setting && typeof setting.label !== \"string\") {\n    throw new Error(\"[isValidSetting] Setting label must be a string\");\n  }\n  const typedSetting = setting;\n  switch (typedSetting.type) {\n    case SETTING_TYPES.NUMBER:\n      if (typeof typedSetting.value !== \"number\") throw new Error(\"[isValidSetting] Number setting value must be a number\");\n      if (typedSetting.min && typeof typedSetting.min !== \"number\") throw new Error(\"[isValidSetting] Number setting min must be a number\");\n      if (typedSetting.max && typeof typedSetting.max !== \"number\") throw new Error(\"[isValidSetting] Number setting max must be a number\");\n      if (typedSetting.step && typeof typedSetting.step !== \"number\") throw new Error(\"[isValidSetting] Number setting max must be a number\");\n      break;\n    case SETTING_TYPES.BOOLEAN:\n      if (typeof typedSetting.value !== \"boolean\") throw new Error(\"[isValidSetting] Boolean setting value must be a boolean\");\n      break;\n    case SETTING_TYPES.STRING:\n      if (typeof typedSetting.value !== \"string\") throw new Error(\"[isValidSetting] String setting value must be a string\");\n      if (typedSetting.maxLength && typeof typedSetting.maxLength !== \"number\") throw new Error(\"[isValidSetting] String setting maxLength must be a number\");\n      break;\n    case SETTING_TYPES.SELECT:\n    case SETTING_TYPES.MULTISELECT:\n    case SETTING_TYPES.RANKED:\n    case SETTING_TYPES.LIST:\n      if (!Array.isArray(typedSetting.options)) throw new Error(`[isValidSetting] ${typedSetting.type} setting must have options array`);\n      typedSetting.options.forEach((option) => {\n        if (typeof option.label !== \"string\") throw new Error(\"[isValidSetting] Option label must be a string\");\n        if (typeof option.value !== \"string\") throw new Error(\"[isValidSetting] Option value must be a string\");\n      });\n      break;\n    case SETTING_TYPES.RANGE:\n      if (typeof typedSetting.value !== \"number\") throw new Error(\"[isValidSetting] Range setting value must be a number\");\n      if (typedSetting.min && typeof typedSetting.min !== \"number\") throw new Error(\"[isValidSetting] Range setting min must be a number\");\n      if (typedSetting.max && typeof typedSetting.max !== \"number\") throw new Error(\"[isValidSetting] Range setting max must be a number\");\n      if (typedSetting.step && typeof typedSetting.step !== \"number\") throw new Error(\"[isValidSetting] Range setting max must be a number\");\n      break;\n    case SETTING_TYPES.COLOR:\n      if (typedSetting.value && typeof typedSetting.value !== \"string\") throw new Error(\"[isValidSetting] Color setting value must be a string\");\n      break;\n    case SETTING_TYPES.FILE:\n      break;\n    // nothing is needed technically speaking\n    default:\n      throw new Error(`[isValidSetting] Invalid setting type: ${JSON.stringify(typedSetting)}`);\n  }\n};\nvar sanitizeSettings = (setting) => {\n  isValidSettings(setting);\n  const commonSettings = {\n    ...setting,\n    disabled: setting.disabled,\n    id: setting.id,\n    label: setting.label || setting.id || \"\",\n    value: setting.value,\n    source: setting.source,\n    description: setting.description || \"No Description\"\n  };\n  switch (setting.type) {\n    case SETTING_TYPES.SELECT:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.SELECT,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        placeholder: setting.placeholder,\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.MULTISELECT:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.MULTISELECT,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        placeholder: setting.placeholder,\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.NUMBER:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.NUMBER,\n        value: setting.value,\n        label: setting.label,\n        min: setting.min,\n        max: setting.max,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.BOOLEAN:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.BOOLEAN,\n        value: setting.value,\n        description: setting.description || \"\",\n        label: setting.label\n      };\n      break;\n    case SETTING_TYPES.STRING:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.STRING,\n        description: setting.description || \"\",\n        value: setting.value,\n        label: setting.label\n      };\n      break;\n    case SETTING_TYPES.RANGE:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.RANGE,\n        value: setting.value,\n        label: setting.label,\n        min: setting.min,\n        max: setting.max,\n        step: setting.step || 1,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.RANKED:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.RANKED,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\",\n        options: setting.options\n      };\n      break;\n    case SETTING_TYPES.LIST:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.LIST,\n        value: setting.value,\n        label: setting.label,\n        unique: setting.unique,\n        orderable: setting.orderable,\n        placeholder: setting.placeholder,\n        maxValues: setting.maxValues,\n        description: setting.description || \"\",\n        options: setting.options || []\n      };\n      break;\n    case SETTING_TYPES.COLOR:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.COLOR,\n        value: setting.value,\n        label: setting.label,\n        description: setting.description || \"\"\n      };\n      break;\n    case SETTING_TYPES.FILE:\n      setting = {\n        ...commonSettings,\n        type: SETTING_TYPES.FILE,\n        value: setting.value,\n        label: setting.label,\n        fileTypes: setting.fileTypes || [],\n        placeholder: setting.placeholder || \"\"\n      };\n      break;\n    default:\n      throw new Error(`[isValidSetting] Unknown setting type: ${setting}`);\n  }\n  return setting;\n};\nvar settingHasOptions = (setting) => {\n  if (!setting) throw new Error(\"[settingHasOptions] Setting must be defined\");\n  if (!setting.type) throw new Error(\"[settingHasOptions] Setting type must be defined\");\n  return setting.type === SETTING_TYPES.RANKED || setting.type === SETTING_TYPES.LIST || setting.type === SETTING_TYPES.SELECT || setting.type === SETTING_TYPES.MULTISELECT;\n};\n\n// src/deskthing.ts\nimport { parentPort } from \"worker_threads\";\n\n// src/utils/validators.ts\nvar isValidAppDataInterface = (app) => {\n  if (!app) {\n    throw new Error(\"App data interface is undefined\");\n  }\n  if (typeof app !== \"object\") {\n    throw new Error(\"App data interface is not an object\");\n  }\n  if (!app.version) {\n    throw new Error(\"App data interface version is undefined\");\n  }\n  if (app.settings) {\n    isValidAppSettings(app.settings);\n  }\n  if (app.tasks) {\n    Object.values(app.tasks).forEach((task) => {\n      isValidTask(task);\n    });\n  }\n  if (app.actions) {\n    Object.values(app.actions).forEach((action) => {\n      isValidAction2(action);\n    });\n  }\n  if (app.keys) {\n    Object.values(app.keys).forEach((key) => {\n      isValidKey(key);\n    });\n  }\n};\nvar isValidAction2 = (action) => {\n  if (!action || typeof action !== \"object\") throw new Error(\"Action must be an object\");\n  const actionObj = action;\n  if (typeof actionObj.id !== \"string\") throw new Error(\"Action id must be a string\");\n  if (typeof actionObj.source !== \"string\") throw new Error(\"Action source must be a string\");\n  if (typeof actionObj.version !== \"string\") {\n    actionObj.version = \"0.0.0\";\n    console.warn(\"WARNING_MISSING_ACTION_VERSION\");\n  }\n  if (typeof actionObj.enabled !== \"boolean\") {\n    actionObj.enabled = true;\n    console.warn(\"WARNING_MISSING_ACTION_ENABLED\");\n  }\n};\nvar isValidKey = (key) => {\n  if (!key || typeof key !== \"object\") throw new Error(\"Key must be an object\");\n  const keyObj = key;\n  if (typeof keyObj.id !== \"string\") throw new Error(\"Key id must be a string\");\n  if (typeof keyObj.source !== \"string\")\n    throw new Error(\"Key source must be a string\");\n  if (typeof keyObj.version !== \"string\")\n    throw new Error(\"Key version must be a string\");\n  if (typeof keyObj.enabled !== \"boolean\")\n    throw new Error(\"Key enabled must be a boolean\");\n  if (!Array.isArray(keyObj.modes))\n    throw new Error(\"Key modes must be an array\");\n  if (!keyObj.modes.every((Mode) => Object.values(EventMode).includes(Mode))) {\n    throw new Error(\"Key modes must all be valid EventMode values\");\n  }\n};\nvar isValidAppSettings = (appSettings) => {\n  if (typeof appSettings !== \"object\") {\n    throw new Error(\"[sanitizeAppSettings] App settings must be an object\");\n  }\n  Object.entries(appSettings).forEach(([key, setting]) => {\n    if (typeof setting !== \"object\") {\n      throw new Error(\"[sanitizeAppSettings] App settings must be an object\");\n    }\n    try {\n      isValidSettings(setting);\n    } catch (error) {\n      console.error(`Failed to validate settings!`, error);\n    }\n  });\n};\n\n// src/deskthing.ts\nvar DeskThingClass = class _DeskThingClass {\n  constructor() {\n    // Context\n    this.manifest = null;\n    // Communication with the server\n    this.imageUrls = {};\n    // Listener data\n    this.Listeners = {};\n    this.sysListeners = [];\n    this.backgroundTasks = [];\n    this.stopRequested = false;\n    /**\n     * Either just sends data, sends and listens for data, or sends - listens - and provides a callback hook\n     * @param requestData\n     * @param listenData\n     * @param callback\n     */\n    this.fetch = async (requestData, listenData, callback, timeoutMs = 500) => {\n      if (!requestData.type) {\n        console.warn(`[fetch]: Request Data doesn't have a \"type\" field`);\n        return void 0;\n      }\n      this.sendToServer(requestData);\n      if (!listenData) return void 0;\n      try {\n        const dataPromise = new Promise(\n          (resolve2) => {\n            let timeoutId = null;\n            let isResolved = false;\n            const handleResolve = (data) => {\n              if (isResolved) return;\n              isResolved = true;\n              if (timeoutId) {\n                clearTimeout(timeoutId);\n                timeoutId = null;\n              }\n              resolve2(data);\n            };\n            timeoutId = setTimeout(() => {\n              console.debug(`[fetch]: Request timed out after ${timeoutMs}ms for type: ${listenData.type}`);\n              handleResolve(void 0);\n            }, timeoutMs);\n            try {\n              this.once(\n                listenData.type,\n                (data) => handleResolve(data),\n                listenData.request\n              ).catch((error) => {\n                console.warn(`[fetch]: Error during fetch listener! ${error}`);\n                handleResolve(void 0);\n              });\n            } catch (error) {\n              console.warn(`[fetch]: Error during fetch listener setup! ${error}`);\n              handleResolve(void 0);\n            }\n          }\n        );\n        const response = await dataPromise;\n        if (callback) {\n          try {\n            await callback(response);\n          } catch (error) {\n            console.warn(\n              `[fetch]: Error during fetch callback! ${error instanceof Error ? error.message : error}`\n            );\n          }\n        }\n        return response;\n      } catch (error) {\n        console.warn(\n          `[fetch]: Error during deskthing fetch! ${error instanceof Error ? error.message : error}`\n        );\n        if (callback) {\n          try {\n            await callback(void 0);\n          } catch (error2) {\n            console.warn(\n              `[fetch]: Error during errored callback! ${error2 instanceof Error ? error2.message : error2}`\n            );\n          }\n        }\n        return void 0;\n      }\n    };\n    /**\n     * Adds a new setting or overwrites an existing one. Automatically saves the new setting to the server to be persisted.\n     *\n     * @param settings - An object containing the settings to add or update.\n     * @param notifyServer - Leave true. Otherwise the settings will not be saved to the server.\n     * @remarks Use {@link DeskThing.initSettings} for the first settings call. Only use this to update settings or add them later.\n     *\n     * @example\n     * // Adding a boolean setting\n     * deskThing.setSettings({\n     *   darkMode: {\n     *     type: 'boolean',\n     *     label: 'Dark Mode',\n     *     value: false,\n     *     description: 'Enable dark mode theme'\n     *   }\n     * })\n     * @example\n     * // Adding a select setting\n     * deskThing.setSettings({\n     *   theme: {\n     *     type: 'select',\n     *     label: 'Theme',\n     *     value: 'light',\n     *     description: 'Choose your theme',\n     *     options: [\n     *       { label: 'Light', value: 'light' },\n     *       { label: 'Dark', value: 'dark' },\n     *       { label: 'System', value: 'system' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a multiselect setting\n     * deskThing.setSettings({\n     *   notifications: {\n     *     type: 'multiselect',\n     *     label: 'Notifications',\n     *     value: ['email'],\n     *     description: 'Choose notification methods',\n     *     options: [\n     *       { label: 'Email', value: 'email' },\n     *       { label: 'SMS', value: 'sms' },\n     *       { label: 'Push', value: 'push' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a number setting\n     * deskThing.setSettings({\n     *   fontSize: {\n     *     type: 'number',\n     *     label: 'Font Size',\n     *     value: 16,\n     *     description: 'Set the font size in pixels',\n     *     min: 12,\n     *     max: 24\n     *   }\n     * })\n     * @example\n     * // Adding a string setting\n     * deskThing.setSettings({\n     *   username: {\n     *     type: 'string',\n     *     label: 'Username',\n     *     value: '',\n     *     description: 'Enter your username'\n     *   }\n     * })\n     * @example\n     * // Adding a range setting\n     * deskThing.setSettings({\n     *   volume: {\n     *     type: 'range',\n     *     label: 'Volume',\n     *     value: 50,\n     *     description: 'Adjust the volume level',\n     *     min: 0,\n     *     max: 100,\n     *     step: 1\n     *   }\n     * })\n     * @example\n     * // Adding an order setting\n     * deskThing.setSettings({\n     *   displayOrder: {\n     *     type: 'order',\n     *     label: 'Display Order',\n     *     value: ['section1', 'section2', 'section3'],\n     *     description: 'Arrange the display order of sections',\n     *     options: [\n     *       { label: 'Section 1', value: 'section1' },\n     *       { label: 'Section 2', value: 'section2' },\n     *       { label: 'Section 3', value: 'section3' }\n     *     ]\n     *   }\n     * })\n     * @example\n     * // Adding a list setting\n     * deskThing.setSettings({\n     *   settingsList: {\n     *      label: \"Settings List\",\n     *      description: \"Select multiple items from the list\",\n     *      type: 'list',\n     *      value: ['item1', 'item2'],\n     *      options: [\n     *          { label: 'Item1', value: 'item1' },\n     *          { label: 'Item2', value: 'item2' },\n     *          { label: 'Item3', value: 'item3' },\n     *          { label: 'Item4', value: 'item4' }\n     *      ]\n     *    }\n     * })\n     * @example\n     * // Adding a color setting\n     * deskThing.setSettings({\n     *   settingsColor: {\n     *      label: \"Settings Color\",\n     *      description: \"Prompt the user to select a color\",\n     *      type: 'color',\n     *      value: '#1ed760'\n     *    }\n     * })\n     */\n    this.setSettings = async (settings) => {\n      const existingSettings = await this.getSettings() || {};\n      if (!settings || typeof settings !== \"object\") {\n        throw new Error(\"Settings must be a valid object\");\n      }\n      Object.entries(settings).forEach(([id, setting]) => {\n        if (!setting.type || !setting.label) {\n          throw new Error(`Setting ${id} must have a type and label`);\n        }\n        try {\n          existingSettings[id] = { ...sanitizeSettings(setting), id };\n        } catch (error) {\n          if (error instanceof Error) {\n            console.error(\n              `Error sanitizing setting with label \"${setting.label}\": ${error.message}`\n            );\n          } else {\n            console.error(\n              `Error sanitizing setting with label \"${setting.label}\": ${error}`\n            );\n          }\n        }\n      });\n      this.saveSettings(existingSettings);\n    };\n    /**\n     * Updates the options for a specific setting\n     */\n    this.setSettingOptions = async (settingId, options) => {\n      const existingSettings = await this.getSettings();\n      if (!existingSettings?.[settingId]) {\n        console.error(`Setting with id ${settingId} not found`);\n        return;\n      }\n      try {\n        settingHasOptions(existingSettings[settingId]);\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(`Error setting option of setting: ${settingId}`, error.message);\n        }\n        return;\n      }\n      existingSettings[settingId].options = options;\n      this.saveSettings(existingSettings);\n    };\n    this.tasks = {\n      /**\n       * Adds a new task.\n       * @throws {Error} - when the data is invalid.\n       * @param taskData - The data for the new task.\n       * @example\n       * deskthing.tasks.add({\n       *    id: 'task-id',\n       *    version: '1.0.0',\n       *    available: true,\n       *    completed: false,\n       *    label: 'Task Name',\n       *    started: false,\n       *    currentStep: 'step-1',\n       *    description: 'Task Description',\n       *    steps: {\n       *      'step-1': {\n       *        id: 'step-1',\n       *        type: STEP_TYPES.STEP,\n       *        completed: false,\n       *        label: 'Step 1',\n       *        instructions: 'Step 1 instructions'\n       *      }\n       *    }\n       * });\n       */\n      add: (taskData) => {\n        try {\n          const newTask = {\n            ...taskData,\n            source: this.manifest?.id || \"unknown\"\n          };\n          isValidTask(newTask);\n          this.sendSocketData(APP_REQUESTS.TASK, { task: newTask }, \"add\");\n        } catch (error) {\n          if (error instanceof Error) {\n            console.warn(\"Invalid task data:\" + error.message);\n          }\n          throw error;\n        }\n      },\n      /**\n       * Initializes the tasks\n       * @throws {Error} - when the data is invalid.\n       */\n      initTasks: async (taskData) => {\n        try {\n          const newTasks = Object.entries(taskData).reduce(\n            (validatedTasks, [id, task]) => {\n              try {\n                const newTask = {\n                  ...task,\n                  id,\n                  source: this.manifest?.id || \"unknown\",\n                  steps: Object.fromEntries(Object.entries(task.steps).map(([stepId, step]) => [\n                    stepId,\n                    {\n                      ...step,\n                      id: step.id || stepId,\n                      source: step.source || this.manifest?.id || \"unknown\"\n                    }\n                  ]))\n                };\n                isValidTask(newTask);\n                return { ...validatedTasks, [newTask.id]: newTask };\n              } catch (error) {\n                console.warn(\n                  `Task ${task.label || task.id} failed to be verified: ` + (error instanceof Error && error.message)\n                );\n                return validatedTasks;\n              }\n            },\n            {}\n          );\n          this.sendSocketData(APP_REQUESTS.TASK, { tasks: newTasks }, \"init\");\n        } catch (error) {\n          console.warn(\n            \"Invalid task data:\" + (error instanceof Error && error.message)\n          );\n        }\n      },\n      /**\n       * Updates a specific step within a task\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to update\n       * @param updates - The partial step data to update\n       * @example\n       * deskthing.tasks.update('task-id', 'step-1', {\n       *   completed: true,\n       *   label: 'Updated Step Label',\n       *   instructions: 'New instructions'\n       * });\n       */\n      update: (taskId, task) => {\n        const validStepFields = [\n          \"id\",\n          \"label\",\n          \"completed\",\n          \"currentStep\",\n          \"started\",\n          \"source\",\n          \"version\",\n          \"available\",\n          \"description\",\n          \"steps\"\n        ];\n        const sanitizedUpdates = Object.fromEntries(\n          Object.entries(task).filter(\n            ([key]) => validStepFields.includes(key)\n          )\n        );\n        this.sendSocketData(\n          APP_REQUESTS.TASK,\n          { taskId, task: { ...sanitizedUpdates, id: taskId } },\n          \"update\"\n        );\n      },\n      /**\n       * Deletes a task by its ID\n       * @param taskId - The ID of the task to delete\n       * @example\n       * deskthing.tasks.delete('task-id');\n       */\n      delete: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"delete\");\n      },\n      /**\n       * Marks a task as completed\n       * @param taskId - The ID of the task to complete\n       * @example\n       * deskthing.tasks.complete('task-id');\n       */\n      complete: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"complete\");\n      },\n      /**\n       * Restarts a task, resetting its progress\n       * @param taskId - The ID of the task to restart\n       * @example\n       * deskthing.tasks.restart('task-id');\n       */\n      restart: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"restart\");\n      },\n      /**\n       * Marks a task as started\n       * @param taskId - The ID of the task to start\n       * @example\n       * deskthing.tasks.start('task-id');\n       */\n      start: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"start\");\n      },\n      /**\n       * Ends a task without completing it\n       * @param taskId - The ID of the task to end\n       * @example\n       * deskthing.tasks.end('task-id');\n       */\n      end: (taskId) => {\n        this.sendSocketData(APP_REQUESTS.TASK, { taskId }, \"end\");\n      },\n      /**\n       * Retrieves task information\n       * @param taskId - Optional ID of the specific task to get. If omitted, returns all tasks\n       * @example\n       * // Get all tasks\n       * deskthing.tasks.get();\n       *\n       * // Later, listen for tasks\n       * deskthing.on()\n       */\n      get: () => {\n        this.sendSocketData(APP_REQUESTS.TASK, {}, \"get\");\n      }\n    };\n    this.steps = {\n      /**\n       * Adds a new step to the specified task.\n       * @param taskId - The unique identifier of the task to which the step belongs.\n       * @param stepData - The data for the new step.\n       * @example\n       * // Basic step\n       * deskthing.steps.add('task-id', {\n       *    id: 'step-id',\n       *    type: STEP_TYPES.STEP,\n       *    label: 'Step Name',\n       *    instructions: 'Step Description',\n       *    completed: false,\n       *    debug: false,\n       *    strict: false,\n       *    parentId: 'parent-task-id'\n       * });\n       *\n       * // Action step\n       * deskthing.steps.add('task-id', {\n       *    id: 'action-step',\n       *    type: STEP_TYPES.ACTION,\n       *    label: 'Run Action',\n       *    instructions: 'Execute this action',\n       *    completed: false,\n       *    action: {\n       *      id: 'action-id',\n       *      value: 'example-value',\n       *      enabled: true,\n       *      source: 'system'\n       *    } as ActionReference\n       * });\n       *\n       * // External step\n       * deskthing.steps.add('task-id', {\n       *    id: 'external-step',\n       *    type: STEP_TYPES.EXTERNAL,\n       *    label: 'External Task',\n       *    instructions: 'Complete this external task',\n       *    completed: false,\n       *    url: 'https://example.com'\n       * });\n       *\n       * // Task step\n       * deskthing.steps.add('task-id', {\n       *    id: 'task-step',\n       *    type: STEP_TYPES.TASK,\n       *    label: 'Complete Task',\n       *    instructions: 'Complete the referenced task',\n       *    completed: false,\n       *    taskId: 'referenced-task-id'\n       * });\n       *\n       * // Shortcut step\n       * deskthing.steps.add('task-id', {\n       *    id: 'shortcut-step',\n       *    type: STEP_TYPES.SHORTCUT,\n       *    label: 'Navigate',\n       *    instructions: 'Go to location',\n       *    completed: false,\n       *    destination: 'settings/general'\n       * });\n       *\n       * // Setting step\n       * deskthing.steps.add('task-id', {\n       *    id: 'setting-step',\n       *    type: STEP_TYPES.SETTING,\n       *    label: 'Configure Setting',\n       *    instructions: 'Set up configuration',\n       *    completed: false,\n       *    setting: {\n       *      value: 'example',\n       *      type: 'string',\n       *      label: 'Example Setting',\n       *      description: 'An example string setting'\n       *    } as SettingsString\n       * });\n       * @throws {Error} If the step data is invalid.\n       */\n      add: (taskId, stepData) => {\n        try {\n          isValidStep(stepData);\n          this.sendSocketData(APP_REQUESTS.STEP, { taskId, step: stepData }, \"add\");\n        } catch (error) {\n          if (error instanceof Error) {\n            console.warn(\"Invalid step data:\" + error.message);\n          }\n        }\n      },\n      /**\n       * Updates an existing step with the provided updates.\n       * Only allows updating valid step fields and sanitizes the input.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to update\n       * @param updates - Partial Step object containing the fields to update\n       */\n      update: (taskId, stepId, updates) => {\n        const validStepFields = [\n          \"parentId\",\n          \"id\",\n          \"debug\",\n          \"strict\",\n          \"type\",\n          \"label\",\n          \"instructions\",\n          \"completed\",\n          \"debugging\",\n          \"source\",\n          \"action\",\n          \"url\",\n          \"taskId\",\n          \"taskSource\",\n          \"destination\",\n          \"setting\"\n        ];\n        const sanitizedUpdates = Object.fromEntries(\n          Object.entries(updates).filter(([key]) => validStepFields.includes(key))\n        );\n        this.sendSocketData(\n          APP_REQUESTS.STEP,\n          { taskId, stepId, step: { ...sanitizedUpdates, id: stepId } },\n          \"update\"\n        );\n      },\n      /**\n       * Deletes a step from a task.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to delete\n       */\n      delete: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"delete\");\n      },\n      /**\n       * Marks a step as completed.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to complete\n       */\n      complete: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"complete\");\n      },\n      /**\n       * Restarts a step by resetting its state.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to restart\n       */\n      restart: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"restart\");\n      },\n      /**\n       * Retrieves a specific step from a task.\n       *\n       * @param taskId - The ID of the task containing the step\n       * @param stepId - The ID of the step to retrieve\n       */\n      get: (taskId, stepId) => {\n        this.sendSocketData(APP_REQUESTS.STEP, { taskId, stepId }, \"get\");\n      }\n    };\n    /**\n     * The updated way to send data to server\n     * Simply wraps postProcessMessage using the correct version\n     * @since v0.11.0\n     */\n    this.sendToServer = async (data) => {\n      this.postProcessMessage({\n        version: _DeskThingClass.version,\n        type: \"data\",\n        payload: data\n      });\n    };\n    this.postProcessMessage = async (data) => {\n      if (parentPort?.postMessage) {\n        parentPort.postMessage(data);\n      } else {\n        console.error(\"Parent port or postmessage is undefined!\");\n      }\n    };\n    this.loadManifest();\n    this.initializeListeners();\n  }\n  static {\n    this.version = \"0.11.0\";\n  }\n  initializeListeners() {\n    parentPort?.on(\"message\", async (data) => {\n      switch (data.type) {\n        case \"data\":\n          this.handleServerMessage(data.payload);\n          break;\n        case \"start\":\n          this.postProcessMessage({\n            version: _DeskThingClass.version,\n            type: \"started\"\n          });\n          this.stopRequested = false;\n          await this.notifyListeners(DESKTHING_EVENTS.START, {\n            type: DESKTHING_EVENTS.START\n          });\n          break;\n        case \"stop\":\n          try {\n            await this.notifyListeners(DESKTHING_EVENTS.STOP, {\n              type: DESKTHING_EVENTS.STOP\n            });\n            this.stopRequested = true;\n            this.backgroundTasks.forEach((cancel) => cancel());\n            this.backgroundTasks = [];\n          } catch (error) {\n            console.error(\"Error in stop:\", error);\n          }\n          this.postProcessMessage({\n            version: _DeskThingClass.version,\n            type: \"stopped\"\n          });\n          break;\n        case \"purge\":\n          await this.purge();\n          break;\n      }\n    });\n  }\n  /**\n   * Singleton pattern: Ensures only one instance of DeskThing exists.\n   *\n   * @since 0.8.0\n   * @example\n   * const deskThing = DeskThing.getInstance();\n   * deskthing.on('start', () => {\n   *   // Your code here\n   * });\n   */\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new _DeskThingClass();\n    }\n    return this.instance;\n  }\n  /**\n   * Notifies all listeners of a particular event.\n   *\n   * @since 0.8.0\n   * @example\n   * deskThing.on('message', (msg) => console.log(msg));\n   * deskThing.notifyListeners('message', 'Hello, World!');\n   */\n  async notifyListeners(event, data) {\n    const callbacks = this.Listeners[event];\n    if (callbacks) {\n      await Promise.all(\n        callbacks.map(async (callback) => {\n          try {\n            await callback(data);\n          } catch (error) {\n            console.log(\n              \"Encountered an error in notifyListeners\" + (error instanceof Error ? error.message : error)\n            );\n          }\n        })\n      );\n    }\n  }\n  /**\n   * Registers an event listener for a specific incoming event. Events are either the \"type\" value of the incoming SocketData object or a special event like \"start\", \"stop\", or \"data\".\n   *\n   * @since 0.8.0\n   * @param event - The event type to listen for.\n   * @param callback - The function to call when the event occurs.\n   * @returns A function to remove the listener.\n   *\n   * @example\n   * const removeListener = deskThing.on('data', (data) => console.log(data));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * const removeListener = deskThing.on('start', () => console.log('App is starting'));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // When {type: 'get'} is received from the server\n   * const removeListener = deskThing.on('get', (socketData) => console.log(socketData.payload));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // When a setting is updated. Passes the updated settings object\n   * const removeListener = deskThing.on('settings', (settings) => console.log(settings.some_setting.value));\n   * removeListener(); // To remove the listener\n   *\n   * @example\n   * // Listening to data from the client\n   * // server\n   * deskThing.on('set', async (socketData) => {\n   *    if (socketData.request === 'loremIpsum') {\n   *      handleData(socketData.payload);\n   *    }\n   * })\n   *\n   * // client\n   * deskThing.send({ type: 'set', request: 'loremIpsum', payload: 'lorem ipsum' });\n   *\n   * @example\n   * // Listening to data from the client\n   * // server\n   * deskThing.on('doSomething', async (socketData) => {\n   *    doSomething()\n   * })\n   *\n   * // client\n   * deskThing.send({ type: 'doSomething' });\n   */\n  on(event, callback) {\n    if (!this.Listeners[event]) {\n      this.Listeners[event] = [];\n    }\n    this.Listeners[event].push(callback);\n    return () => this.off(event, callback);\n  }\n  /**\n   * Removes a specific event listener for a particular incoming event.\n   *\n   * @since 0.8.0\n   * @param event - The event for which to remove the listener.\n   * @param callback - The listener function to remove.\n   *\n   * @example\n   * const dataListener = () => console.log('Data received');\n   * deskthing.on('data', dataListener);\n   * deskthing.off('data', dataListener);\n   */\n  off(event, callback) {\n    if (!this.Listeners[event]) {\n      return;\n    }\n    this.Listeners[event] = this.Listeners[event].filter(\n      (cb) => cb !== callback\n    );\n  }\n  /**\n   * Registers a one-time listener for an incoming event. The listener will be automatically removed after the first occurrence of the event.\n   *\n   * Will destructure the response from the server and just return the \"payload\" field\n   *\n   * @since 0.10.0\n   * @param event - The event to listen for. This is either the 'type' field of SocketData or special cases like 'get' or 'start'\n   * @param callback - Optional callback function. If omitted, returns a promise.\n   * @returns A promise that resolves with the event data if no callback is provided.\n   *\n   * @example\n   * DeskThing.once('message').then(data => console.log('Received data:', data)); // prints 'hello'\n   *\n   * // elsewhere\n   * send({ type: 'message', payload: 'hello' });\n   * @example\n   * const flagType = await DeskThing.once('flagType');\n   * console.log('Flag type:', flagType);\n   * @example\n   * await DeskThing.once('flagType', someFunction);\n   *\n   *\n   * @throws\n   * if something goes wrong\n   */\n  async once(event, callback, request) {\n    try {\n      return new Promise(\n        (resolve2) => {\n          const onceWrapper = async (data) => {\n            if (request && data.request !== request) {\n              return;\n            }\n            this.off(event, onceWrapper);\n            if (callback) {\n              await callback(data);\n            }\n            resolve2(data);\n          };\n          this.on(event, onceWrapper);\n        }\n      );\n    } catch (error) {\n      console.warn(\"Failed to listen for event: \" + event);\n      throw new Error(\n        `Error in once() for app ${this.manifest?.id || \"unset\"}: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n  /**\n   * Sends data to the server with a specified event type.\n   *\n   * @since 0.8.0\n   * @param event - The event type to send.\n   * @param payload - The data to send.\n   * @param request - Optional request string.\n   *\n   * @example\n   * deskThing.sendSocketData('log', { message: 'Logging an event' });\n   */\n  sendSocketData(event, payload, request) {\n    const appData = {\n      type: event,\n      request,\n      payload\n    };\n    this.sendToServer(appData);\n  }\n  /**\n   * Sends data to the client for the client to listen to\n   *\n   * @since 0.10.0\n   * @param payload - { type: string, payload: any, request?: string }\n   *\n   * @example\n   * // Server\n   * deskThing.send({ type: 'message', payload: 'Hello from the Server!' });\n   *\n   * // Client\n   * deskThing.on('message', (data: SocketData) => {\n   *   console.log('Received message:', data.payload); // prints 'Hello from the Server!'\n   * });\n   * @example\n   * // Server\n   * deskThing.send({ type: 'someFancyData', payload: someDataObject });\n   *\n   * // Client\n   * deskThing.on('someFancyData', (data: SocketData) => {\n   *   const someData = data.payload;\n   * });\n   *\n   * @example\n   * // Server\n   * deskThing.send({type: 'songData', payload: musicData });\n   *\n   * // Client\n   * deskThing.on('songData', (data: SocketData) => {\n   *   const musicData = data.payload as SongData;\n   * });\n   */\n  send(payload) {\n    const filledPayload = {\n      app: this.manifest?.id,\n      ...payload\n    };\n    this.sendSocketData(APP_REQUESTS.SEND, filledPayload);\n  }\n  sendSong(songData) {\n    this.sendSocketData(APP_REQUESTS.SONG, songData);\n  }\n  /**\n   * Routes request to another app running on the server.\n   * Ensure that the app you are requesting data from is in your dependency array!\n   *\n   * @param appId - The ID of the target app.\n   * @param data - The data to send to the target app.\n   * @since 0.11.0\n   * @example\n   * deskThing.sendToApp('utility', { type: 'set', request: 'next', payload: { id: '' } });\n   * @example\n   * deskThing.sendToApp('spotify', { type: 'get', request: 'music' });\n   */\n  sendToApp(appId, payload) {\n    this.sendSocketData(APP_REQUESTS.TOAPP, payload, appId);\n  }\n  /**\n   * Requests the server to open a specified URL.\n   *\n   * @param url - The URL to open.\n   *\n   * @example\n   * deskThing.openUrl('https://example.com');\n   */\n  openUrl(url) {\n    this.sendSocketData(APP_REQUESTS.OPEN, url);\n  }\n  /**\n   * Fetches data from the server if not already retrieved, otherwise returns the cached data.\n   * This method also handles queuing requests while data is being fetched.\n   *\n   * @returns A promise that resolves with the data fetched or the cached data, or null if data is not available.\n   *\n   * @example\n   * const data = await deskThing.getData();\n   * console.log('Fetched data:', data);\n   */\n  async getData() {\n    const data = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"data\"\n      },\n      { type: DESKTHING_EVENTS.DATA }\n    );\n    if (!data) {\n      console.error(\"[getData]: Data not available\");\n      return null;\n    }\n    return data.payload;\n  }\n  /**\n   * Fetches data from the server if not already retrieved, otherwise returns the cached data.\n   * This method also handles queuing requests while data is being fetched.\n   *\n   * @returns A promise that resolves with the data fetched or the cached data, or null if data is not available.\n   *\n   * @example\n   * const data = await deskThing.getData();\n   * console.log('Fetched data:', data);\n   */\n  async getAppData() {\n    const data = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"appData\"\n      },\n      {\n        type: DESKTHING_EVENTS.APPDATA\n      }\n    );\n    if (!data) {\n      console.error(\"[getAppData]: Data not available\");\n      return null;\n    }\n    return data.payload;\n  }\n  /**\n   * Asynchronously retrieves the current settings. If settings are not defined, it fetches them from the server.\n   *\n   * @returns The current settings or undefined if not set.\n   *\n   * @example\n   * const settings = deskThing.getSettings();\n   * console.log('Current settings:', settings);\n   */\n  async getSettings() {\n    const socketData = await this.fetch(\n      {\n        type: APP_REQUESTS.GET,\n        request: \"settings\"\n      },\n      {\n        type: DESKTHING_EVENTS.SETTINGS\n      },\n      () => {\n      },\n      500\n    );\n    if (!socketData?.payload) {\n      console.error(\"[getSettings]: Settings are not defined!\");\n      return null;\n    }\n    return socketData.payload;\n  }\n  /**\n   * Initializes the settings and assumes the settings provided by the server are preferred over the passed settings.\n   * Should be used for startup settings and only startup settings\n   *\n   * @param settings The settings object\n   */\n  async initSettings(settings) {\n    this.sendSocketData(APP_REQUESTS.SET, settings, \"settings-init\");\n  }\n  /**\n   * Deletes settings from the server\n   *\n   * @example\n   * // Delete a single setting\n   * server.deleteSetting('color');\n   */\n  async deleteSettings(settingIds) {\n    this.sendSocketData(APP_REQUESTS.DELETE, settingIds, \"settings\");\n  }\n  /**\n   * Deletes data from the server\n   *\n   * @example\n   * // Delete a single data item\n   * server.deleteData('client_id');\n   *\n   */\n  async deleteData(dataIds) {\n    this.sendSocketData(APP_REQUESTS.DELETE, dataIds, \"data\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesongicon' // overrides \"id\" and instead looks in /public/icons/likesongicon.svg\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   * @example\n   * // Super minimal action\n   * const action = {\n   *      id: 'trigger' // looks for icon in /public/icons/trigger.svg\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'trigger') {\n   *          DeskThing.sendLog('An action was triggered!')\n   *      }\n   * })\n   */\n  registerAction(action) {\n    if (!action || typeof action !== \"object\") {\n      throw new Error(\"Invalid action object\");\n    }\n    if (!action.id || typeof action.id !== \"string\") {\n      throw new Error(\"Action must have a valid id\");\n    }\n    this.sendSocketData(APP_REQUESTS.ACTION, action, \"add\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesongicon' // overrides \"id\" and instead looks in /public/icons/likesongicon.svg\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   * @example\n   * // Super minimal action\n   * const action = {\n   *      id: 'trigger' // looks for icon in /public/icons/trigger.svg\n   * }\n   * DeskThing.registerAction(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'trigger') {\n   *          DeskThing.sendLog('An action was triggered!')\n   *      }\n   * })\n   */\n  initActions(actions) {\n    if (!actions || !Array.isArray(actions)) {\n      throw new Error(\"Invalid action object\");\n    }\n    this.sendSocketData(APP_REQUESTS.ACTION, actions, \"init\");\n  }\n  /**\n   * Registers a new action to the server. This can be mapped to any key on the deskthingserver UI.\n   *\n   * @param action - The action object to register.\n   * @throws {Error} If the action object is invalid.\n   * @deprecated - Use {@link DeskThing.registerAction} instead.\n   * @example\n   * const action = {\n   *      name: 'Like'\n   *      description: 'Likes the currently playing song'\n   *      id: 'likesong'\n   *      value: 'toggle'\n   *      value_options: ['like', 'dislike', 'toggle']\n   *      value_instructions: 'Determines whether to like, dislike, or toggle the currently liked song'\n   *      icon: 'likesong'\n   *      version: 'v0.10.1'\n   *      tag: 'media'\n   * }\n   * DeskThing.registerActionObject(action)\n   * DeskThing.on('action', (data) => {\n   *      if (data.payload.id === 'likesong') {\n   *          DeskThing.sendLog('Like Song value is set to: ', data.value)\n   *      }\n   * })\n   */\n  registerActionObject(action) {\n    this.registerAction(action);\n  }\n  /**\n   * Updates the flair of a specified action id. This can be used to update the image of the button. Flair is appended to the end of the action name and thus the end of the SVG path as well\n   * @param id action id\n   * @param flair the updated flair\n   * @example\n   * // Previously using like.svg\n   * deskthing.updateFlair('like', 'active')\n   * // Now using likeactive.svg\n   */\n  updateIcon(actionId, newIcon) {\n    this.sendSocketData(APP_REQUESTS.ACTION, { id: actionId, icon: newIcon }, \"update\");\n  }\n  /**\n   * Registers a new key with the specified identifier. This can be mapped to any action. Use a keycode to map a specific keybind.\n   * Possible keycodes can be found at https://www.toptal.com/developers/keycode and is listening for event.code\n   *\n   * Keys can also be considered \"digital\" like buttons on the screen.\n   * The first number in the key will be passed to the action\n   * @deprecated - Use {@link DeskThing.registerKeyObject} instead.\n   * @throws {Error} If the key object is invalid.\n   * @param id - The unique identifier for the key.\n   * @param description - Description for the key.\n   */\n  registerKey(id, description, modes, version) {\n    this.registerKeyObject({ id, description, modes, version });\n  }\n  /**\n   * Registers a new key with the specified identifier. This can be mapped to any action. Use a keycode to map a specific keybind.\n   * Possible keycodes can be found at https://www.toptal.com/developers/keycode and is listening for event.code\n   *\n   * Keys can also be considered \"digital\" like buttons on the screen.\n   * @throws {Error} If the key object is invalid.\n   * @param key - The key object to register.\n   */\n  registerKeyObject(key) {\n    if (!key || typeof key !== \"object\") {\n      throw new Error(\"Invalid key object\");\n    }\n    if (!key.modes || !Array.isArray(key.modes) || key.modes.length === 0) {\n      throw new Error(\"Key must have valid modes\");\n    }\n    if (typeof key.id !== \"string\") {\n      throw new Error(\"Key must have a valid id\");\n    }\n    const newKey = {\n      ...key,\n      source: this.manifest?.id || \"unknown\",\n      enabled: true\n    };\n    this.sendSocketData(APP_REQUESTS.KEY, newKey, \"add\");\n  }\n  /**\n   * Removes an action with the specified identifier.\n   *\n   * @param id - The unique identifier of the action to be removed.\n   */\n  removeAction(id) {\n    this.sendSocketData(APP_REQUESTS.ACTION, { id }, \"remove\");\n  }\n  /**\n   * Removes a key with the specified identifier.\n   *\n   * @param id - The unique identifier of the key to be removed.\n   */\n  removeKey(id) {\n    this.sendSocketData(APP_REQUESTS.KEY, { id }, \"remove\");\n  }\n  /**\n   * Saves the provided data by merging it with the existing appdata and updating settings.\n   * Sends the updated data to the server and notifies listeners.\n   *\n   * @param data - The data to be saved and merged with existing data.\n   * @param sync - Whether to sync the data with the server.\n   */\n  saveAppData(data, sync = true) {\n    sync && this.sendSocketData(APP_REQUESTS.SET, data, \"appData\");\n    this.notifyListeners(DESKTHING_EVENTS.APPDATA, {\n      type: DESKTHING_EVENTS.APPDATA,\n      payload: data\n    });\n  }\n  /**\n   * Saves the provided data by merging it with the existing data and updating settings.\n   * Sends the updated data to the server and notifies listeners.\n   *\n   * @param data - The data to be saved and merged with existing data.\n   */\n  saveData(data, sync = true) {\n    this.notifyListeners(DESKTHING_EVENTS.DATA, {\n      type: DESKTHING_EVENTS.DATA,\n      payload: data\n    });\n    sync && this.sendSocketData(APP_REQUESTS.SET, data, \"data\");\n  }\n  /**\n   * Saves settings to server - overwriting existing settings\n   */\n  saveSettings(settings) {\n    this.sendSocketData(APP_REQUESTS.SET, settings, \"settings\");\n  }\n  /**\n   * Adds a background task that will loop until either the task is cancelled or the task function returns true.\n   * This is useful for tasks that need to run periodically or continuously in the background.\n   *\n   * Returning TRUE will end the loop and cancel the task\n   * Returning FALSE will start another loop after the timeout is completed\n   *\n   * @param task () => boolean - The background task function to add. This function should return a Promise that resolves to a boolean or void.\n   * @param timeout - Optional timeout in milliseconds between task iterations.\n   * @returns A function to cancel the background task.\n   *\n   * @example\n   * // Add a background task that logs a message every 5 seconds\n   * const cancelTask = deskThing.scheduleTask(async () => {\n   *   console.log('Performing periodic task...');\n   *   await new Promise(resolve => setTimeout(resolve, 5000));\n   *   return false; // Return false to continue the loop\n   * });\n   *\n   * // Later, to stop the task:\n   * cancelTask();\n   *\n   * @example\n   * // Add a background task that runs until a condition is met\n   * let count = 0;\n   * deskThing.scheduleTask(async () => {\n   *   console.log(`Task iteration ${++count}`);\n   *   if (count >= 10) {\n   *     console.log('Task completed');\n   *     return true; // Return true to end the loop\n   *   }\n   *   return false; // Continue the loop\n   * });\n   *\n   * @example\n   * // Add a background task that runs every second\n   * deskThing.scheduleTask(async () => {\n   *   checkForUpdates();\n   * }, 1000);\n   */\n  setInterval(task, timeout) {\n    const cancelToken = { cancelled: false };\n    const wrappedTask = async () => {\n      let endToken = false;\n      while (!cancelToken.cancelled && !endToken) {\n        endToken = await task() || false;\n        if (timeout) {\n          await new Promise((resolve2) => setTimeout(resolve2, timeout));\n        }\n      }\n    };\n    this.backgroundTasks.push(() => {\n      cancelToken.cancelled = true;\n    });\n    wrappedTask();\n    return () => {\n      cancelToken.cancelled = true;\n    };\n  }\n  /**\n   * Sets a timeout that delays the execution of code\n   * The timeout will be cancelled if the app is purged / disabled\n   *\n   * @returns A function that can be called to cancel the timeout\n   */\n  setTimeout(fn, timeout) {\n    const cancelToken = { cancelled: false };\n    const timeoutId = setTimeout(async () => {\n      if (!cancelToken.cancelled) {\n        await fn();\n      }\n    }, timeout);\n    this.backgroundTasks.push(() => {\n      cancelToken.cancelled = true;\n      clearTimeout(timeoutId);\n    });\n    return () => {\n      cancelToken.cancelled = true;\n      clearTimeout(timeoutId);\n    };\n  }\n  /**\n   * @deprecated Use {@link DeskThing.scheduleTask} instead for repeated tasks or {@link DeskThing.addThread} for single-use long-running tasks like websockets\n   * @param task\n   * @param timeout\n   * @returns\n   */\n  addBackgroundTaskLoop(task, timeout) {\n    return this.setInterval(task, timeout);\n  }\n  /**\n   * Creates a new worker thread that runs independently and can be force-killed.\n   * Thread is automatically terminated when app closes.\n   *\n   * @param workerPath - Path to the worker file relative to project root\n   * @returns Object containing terminate function and worker instance\n   *\n   * @example\n   * // Main thread\n   * DeskThing.on('start', async () => {\n   *    const [ remove, worker ] = DeskThing.addThread('./workers/websocket.js');\n   *\n   *    worker.on('message', (data) => {\n   *      DeskThing.log(LOGGING_LEVELS.LOG, `Received message: ${data}`);\n   *    });\n   *\n   *    worker.postMessage({ type: 'send', payload: 'Hello from the main thread!' });\n   * })\n   * // workers/websocket.ts\n   * import { parentPort } from 'worker_threads'\n   * import WebSocket from 'ws'\n   *\n   * const ws = new WebSocket('wss://your-websocket-server.com')\n   *\n   * ws.on('open', () => {\n   *   parentPort?.postMessage({ type: 'connected' })\n   * })\n   *\n   * ws.on('message', (data) => {\n   *   parentPort?.postMessage({ type: 'message', data: data.toString() })\n   * })\n   *\n   * ws.on('error', (error) => {\n   *   parentPort?.postMessage({ type: 'error', error: error.message })\n   * })\n   *\n   * ws.on('close', () => {\n   *   parentPort?.postMessage({ type: 'disconnected' })\n   * })\n   *\n   * // Handle messages from main thread\n   * parentPort?.on('message', (message) => {\n   *   if (message.type === 'send') {\n   *     ws.send(message.payload) // Send message to WebSocket server with content 'Hello from the main thread!'\n   *   }\n   * })\n   *\n   * @example // Ex: How to pass data to worker thread\n   * import { parentPort, workerData } from 'worker_threads';\n   *\n   * // Access passed data\n   * console.log(workerData.someValue);\n   *\n   * // Use the data in your worker logic\n   * parentPort?.postMessage({\n   *     type: 'init',\n   *     config: workerData\n   * });\n   *\n   * // Main thread\n   * const config = {\n   *     interval: 1000,\n   *     url: 'wss://example.com'\n   * };\n   *\n   * const [worker, terminate] = DeskThing.addThread('./workers/websocket.js', config);\n   */\n  addThread(workerPath, workerData) {\n    const resolvedPath = path.resolve(__dirname, workerPath);\n    if (!fs.existsSync(resolvedPath)) {\n      throw new Error(`Worker file not found: ${workerPath}`);\n    }\n    const worker = new Worker(resolvedPath, { workerData });\n    worker.on(\"error\", (error) => {\n      console.error(`Worker error: ${error.message}`);\n    });\n    worker.on(\"exit\", (code) => {\n      if (code !== 0) {\n        console.error(`Worker stopped with exit code ${code}`);\n      }\n      console.log(`Worker terminated`);\n    });\n    const terminate = () => {\n      try {\n        worker.removeAllListeners();\n        worker.terminate();\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(`Failed to terminate worker: ${error.message}`);\n        } else {\n          console.error(`Failed to terminate worker: ${error}`);\n          console.error(\"[addThread - app]: Unknown error: \", error);\n        }\n      }\n    };\n    this.backgroundTasks.push(terminate);\n    return [worker, terminate];\n  }\n  /**\n   * -------------------------------------------------------\n   * Deskthing Server Functions\n   */\n  /**\n   * Fetches the manifest\n   * @returns Manifest | null\n   */\n  loadManifest() {\n    if (this.manifest) {\n      return this.manifest;\n    }\n    const builtManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../manifest.json\"\n    );\n    const devManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../deskthing/manifest.json\"\n    );\n    const oldBuiltManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"./manifest.json\"\n    );\n    const oldDevManifestPath = path.resolve(\n      process.env.DESKTHING_ROOT_PATH || __dirname,\n      \"../public/manifest.json\"\n    );\n    const errors = [];\n    if (fs.existsSync(builtManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(builtManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load built manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(devManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(devManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load dev manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(oldBuiltManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(oldBuiltManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load old built manifest:\");\n        errors.push(error);\n      }\n    }\n    if (fs.existsSync(oldDevManifestPath)) {\n      try {\n        const manifestData = fs.readFileSync(oldDevManifestPath, \"utf-8\");\n        this.manifest = JSON.parse(manifestData);\n        return this.manifest;\n      } catch (error) {\n        console.error(\"Failed to load old dev manifest:\");\n        errors.push(error);\n      }\n    }\n    console.error(\n      \"[loadManifest] Failed to load manifest from any location:\",\n      errors\n    );\n    console.log(\"[loadManifest]: Manifest not found in any location\");\n    return null;\n  }\n  /**\n   * Returns the manifest in a Response structure\n   * If the manifest is not found or fails to load, it returns a 500 status code.\n   * It will attempt to read the manifest from file if the manifest does not exist in cache\n   *\n   * !! This method is not intended for use in client code.\n   *\n   * @example\n   * const manifest = deskThing.getManifest();\n   * console.log(manifest);\n   */\n  getManifest() {\n    if (!this.manifest) {\n      this.loadManifest();\n      if (!this.manifest) {\n        return;\n      } else {\n      }\n    }\n    return this.manifest;\n  }\n  /**\n   * @returns\n   */\n  async purge() {\n    try {\n      await this.notifyListeners(DESKTHING_EVENTS.PURGE, {\n        type: DESKTHING_EVENTS.PURGE,\n        request: void 0\n      });\n      this.stopRequested = true;\n      this.backgroundTasks.forEach((cancel) => cancel());\n      this.clearCache();\n    } catch (error) {\n      console.error(\"Error in Purge:\", error);\n      return {\n        data: { message: `Error in Purge: ${error}` },\n        status: 500,\n        statusText: \"Internal Server Error\",\n        request: []\n      };\n    }\n    return {\n      data: { message: \"App purged successfully!\" },\n      status: 200,\n      statusText: \"OK\",\n      request: []\n    };\n  }\n  // Method to clear cached data\n  clearCache() {\n    this.Listeners = {};\n    this.manifest = null;\n    this.stopRequested = false;\n    this.backgroundTasks = [];\n    this.sysListeners.forEach((removeListener) => removeListener());\n    this.sysListeners = [];\n    Promise.all(\n      Object.entries(this.imageUrls).map(async ([url, id]) => {\n        try {\n          const imagePath = path.join(__dirname, id);\n          await fs.promises.unlink(imagePath);\n          delete this.imageUrls[url];\n        } catch (err) {\n          console.warn(`Failed to delete image ${id}:`, err);\n        }\n      })\n    );\n  }\n  /**\n   * @returns\n   */\n  async handleServerMessage(data) {\n    try {\n      if (!data) return;\n      if (process.env.DESKTHING_ENV == \"development\") {\n      }\n      switch (data.type) {\n        case DESKTHING_EVENTS.APPDATA:\n          try {\n            if (!data.payload) throw new Error(\"No data payload\");\n            isValidAppDataInterface(data.payload);\n            this.saveAppData(data.payload, false);\n          } catch (error) {\n            console.log(\"Received invalid data from server\");\n            console.error(\"Invalid app data interface:\", error);\n            console.debug(\"Data Received: \" + JSON.stringify(data));\n            return;\n          }\n          break;\n        case DESKTHING_EVENTS.DATA:\n          if (data.payload) {\n            this.saveData(data.payload, false);\n          }\n          break;\n        case DESKTHING_EVENTS.MESSAGE:\n          console.log(\"Received message from server:\" + data.payload);\n          break;\n        case DESKTHING_EVENTS.SETTINGS:\n          if (!data.payload) {\n            console.warn(\"Received invalid settings from server:\", data);\n          } else {\n            const settings = data.payload;\n            this.notifyListeners(DESKTHING_EVENTS.SETTINGS, {\n              type: DESKTHING_EVENTS.SETTINGS,\n              payload: settings\n            });\n          }\n          break;\n        default:\n          this.notifyListeners(data.type, data);\n          break;\n      }\n    } catch (error) {\n      console.error(\n        \"Encountered an error in toClient\" + (error instanceof Error ? error.message : error)\n      );\n    }\n  }\n};\nfunction createDeskThing() {\n  return DeskThingClass.getInstance();\n}\nvar DeskThing = DeskThingClass.getInstance();\nexport {\n  DeskThing,\n  DeskThingClass,\n  createDeskThing\n};\n", "/**\n * This file is autogenerated by scripts/build-types.ts\n * To update this with latest changes do npm run generate:obs-types\n */\nimport type {Merge, JsonArray, JsonObject, JsonValue} from 'type-fest';\n\nexport enum WebSocketOpCode {\n/**\n * The initial message sent by obs-websocket to newly connected clients.\n *\n * Initial OBS Version: 5.0.0\n */\n\tHello = 0,\n\t/**\n\t * The message sent by a newly connected client to obs-websocket in response to a `Hello`.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tIdentify = 1,\n\t/**\n\t * The response sent by obs-websocket to a client after it has successfully identified with obs-websocket.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tIdentified = 2,\n\t/**\n\t * The message sent by an already-identified client to update identification parameters.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tReidentify = 3,\n\t/**\n\t * The message sent by obs-websocket containing an event payload.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tEvent = 5,\n\t/**\n\t * The message sent by a client to obs-websocket to perform a request.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tRequest = 6,\n\t/**\n\t * The message sent by obs-websocket in response to a particular request from a client.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tRequestResponse = 7,\n\t/**\n\t * The message sent by a client to obs-websocket to perform a batch of requests.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tRequestBatch = 8,\n\t/**\n\t * The message sent by obs-websocket in response to a particular batch of requests from a client.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tRequestBatchResponse = 9,\n}\n\n/* eslint-disable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\nexport enum EventSubscription {\n/**\n * Subcription value used to disable all events.\n *\n * Initial OBS Version: 5.0.0\n */\n\tNone = 0,\n\t/**\n\t * Subscription value to receive events in the `General` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tGeneral = (1 << 0),\n\t/**\n\t * Subscription value to receive events in the `Config` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tConfig = (1 << 1),\n\t/**\n\t * Subscription value to receive events in the `Scenes` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tScenes = (1 << 2),\n\t/**\n\t * Subscription value to receive events in the `Inputs` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tInputs = (1 << 3),\n\t/**\n\t * Subscription value to receive events in the `Transitions` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tTransitions = (1 << 4),\n\t/**\n\t * Subscription value to receive events in the `Filters` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tFilters = (1 << 5),\n\t/**\n\t * Subscription value to receive events in the `Outputs` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tOutputs = (1 << 6),\n\t/**\n\t * Subscription value to receive events in the `SceneItems` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tSceneItems = (1 << 7),\n\t/**\n\t * Subscription value to receive events in the `MediaInputs` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tMediaInputs = (1 << 8),\n\t/**\n\t * Subscription value to receive the `VendorEvent` event.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tVendors = (1 << 9),\n\t/**\n\t * Subscription value to receive events in the `Ui` category.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tUi = (1 << 10),\n\t/**\n\t * Helper to receive all non-high-volume events.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tAll = (General | Config | Scenes | Inputs | Transitions | Filters | Outputs | SceneItems | MediaInputs | Vendors | Ui),\n\t/**\n\t * Subscription value to receive the `InputVolumeMeters` high-volume event.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tInputVolumeMeters = (1 << 16),\n\t/**\n\t * Subscription value to receive the `InputActiveStateChanged` high-volume event.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tInputActiveStateChanged = (1 << 17),\n\t/**\n\t * Subscription value to receive the `InputShowStateChanged` high-volume event.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tInputShowStateChanged = (1 << 18),\n\t/**\n\t * Subscription value to receive the `SceneItemTransformChanged` high-volume event.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tSceneItemTransformChanged = (1 << 19),\n}\n/* eslint-enable no-bitwise, @typescript-eslint/prefer-literal-enum-member */\n\nexport enum RequestBatchExecutionType {\n/**\n * Not a request batch.\n *\n * Initial OBS Version: 5.0.0\n */\n\tNone = -1,\n\t/**\n\t * A request batch which processes all requests serially, as fast as possible.\n\t *\n\t * Note: To introduce artificial delay, use the `Sleep` request and the `sleepMillis` request field.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tSerialRealtime = 0,\n\t/**\n\t * A request batch type which processes all requests serially, in sync with the graphics thread. Designed to provide high accuracy for animations.\n\t *\n\t * Note: To introduce artificial delay, use the `Sleep` request and the `sleepFrames` request field.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tSerialFrame = 1,\n\t/**\n\t * A request batch type which processes all requests using all available threads in the thread pool.\n\t *\n\t * Note: This is mainly experimental, and only really shows its colors during requests which require lots of\n\t * active processing, like `GetSourceScreenshot`.\n\t *\n\t * Initial OBS Version: 5.0.0\n\t */\n\tParallel = 2,\n}\n\n// WebSocket Message Types\nexport type IncomingMessage<Type = keyof IncomingMessageTypes> = Type extends keyof IncomingMessageTypes ? {\n\top: Type;\n\td: IncomingMessageTypes[Type];\n} : never;\n\nexport type OutgoingMessage<Type = keyof OutgoingMessageTypes> = Type extends keyof OutgoingMessageTypes ? {\n\top: Type;\n\td: OutgoingMessageTypes[Type];\n} : never;\n\nexport interface IncomingMessageTypes {\n\t/**\n\t * Message sent from the server immediately on client connection. Contains authentication information if auth is required. Also contains RPC version for version negotiation.\n\t */\n\t[WebSocketOpCode.Hello]: {\n\t\t/**\n\t\t * Version number of obs-websocket\n\t\t */\n\t\tobsWebSocketVersion: string;\n\t\t/**\n\t\t * Version number which gets incremented on each breaking change to the obs-websocket protocol.\n\t\t * It's usage in this context is to provide the current rpc version that the server would like to use.\n\t\t */\n\t\trpcVersion: number;\n\t\t/**\n\t\t * Authentication challenge when password is required\n\t\t */\n\t\tauthentication?: {\n\t\t\tchallenge: string;\n\t\t\tsalt: string;\n\t\t};\n\t};\n\t/**\n\t * The identify request was received and validated, and the connection is now ready for normal operation.\n\t */\n\t[WebSocketOpCode.Identified]: {\n\t\t/**\n\t\t * If rpc version negotiation succeeds, the server determines the RPC version to be used and gives it to the client\n\t\t */\n\t\tnegotiatedRpcVersion: number;\n\t};\n\t/**\n\t * An event coming from OBS has occured. Eg scene switched, source muted.\n\t */\n\t[WebSocketOpCode.Event]: EventMessage;\n\t/**\n\t * obs-websocket is responding to a request coming from a client\n\t */\n\t[WebSocketOpCode.RequestResponse]: ResponseMessage;\n\t/**\n\t * obs-websocket is responding to a batch request coming from a client\n\t */\n\t[WebSocketOpCode.RequestBatchResponse]: ResponseBatchMessage;\n}\n\nexport interface OutgoingMessageTypes {\n\t/**\n\t * Response to Hello message, should contain authentication string if authentication is required, along with PubSub subscriptions and other session parameters.\n\t */\n\t[WebSocketOpCode.Identify]: {\n\t\t/**\n\t\t * Version number that the client would like the obs-websocket server to use\n\t\t */\n\t\trpcVersion: number;\n\t\t/**\n\t\t * Authentication challenge response\n\t\t */\n\t\tauthentication?: string;\n\t\t/**\n\t\t * Bitmask of `EventSubscription` items to subscribe to events and event categories at will. By default, all event categories are subscribed, except for events marked as high volume. High volume events must be explicitly subscribed to.\n\t\t */\n\t\teventSubscriptions?: number;\n\t};\n\t/**\n\t * Sent at any time after initial identification to update the provided session parameters.\n\t */\n\t[WebSocketOpCode.Reidentify]: {\n\t\t/**\n\t\t * Bitmask of `EventSubscription` items to subscribe to events and event categories at will. By default, all event categories are subscribed, except for events marked as high volume. High volume events must be explicitly subscribed to.\n\t\t */\n\t\teventSubscriptions?: number;\n\t};\n\t/**\n\t * Client is making a request to obs-websocket. Eg get current scene, create source.\n\t */\n\t[WebSocketOpCode.Request]: RequestMessage;\n\t/**\n\t * Client is making a batch request to obs-websocket.\n\t */\n\t[WebSocketOpCode.RequestBatch]: RequestBatchMessage;\n}\n\ntype EventMessage<T = keyof OBSEventTypes> = T extends keyof OBSEventTypes ? {\n\teventType: T;\n\t/**\n\t * The original intent required to be subscribed to in order to receive the event.\n\t */\n\teventIntent: number;\n\teventData: OBSEventTypes[T];\n} : never;\n\nexport type RequestMessage<T = keyof OBSRequestTypes> = T extends keyof OBSRequestTypes ? {\n\trequestType: T;\n\trequestId: string;\n\trequestData: OBSRequestTypes[T];\n} : never;\n\nexport type RequestBatchRequest<T = keyof OBSRequestTypes> = T extends keyof OBSRequestTypes ? OBSRequestTypes[T] extends never ? {\n\trequestType: T;\n\trequestId?: string;\n} : {\n\trequestType: T;\n\trequestId?: string;\n\trequestData: OBSRequestTypes[T];\n} : never;\n\nexport type RequestBatchOptions = {\n\t/**\n\t * The mode of execution obs-websocket will run the batch in\n\t */\n\texecutionType?: RequestBatchExecutionType;\n\t/**\n\t * Whether obs-websocket should stop executing the batch if one request fails\n\t */\n\thaltOnFailure?: boolean;\n};\n\nexport type RequestBatchMessage = Merge<RequestBatchOptions, {\n\trequestId: string;\n\trequests: RequestBatchRequest[];\n}>;\n\nexport type ResponseMessage<T = keyof OBSResponseTypes> = T extends keyof OBSResponseTypes ? {\n\trequestType: T;\n\trequestId: string;\n\trequestStatus: {result: true; code: number} | {result: false; code: number; comment: string};\n\tresponseData: OBSResponseTypes[T];\n} : never;\n\nexport type ResponseBatchMessage = {\n\trequestId: string;\n\tresults: ResponseMessage[];\n};\n\n// Events\nexport interface OBSEventTypes {\n\tCurrentSceneCollectionChanging: {\n\t\t/**\n\t\t * Name of the current scene collection\n\t\t */\n\t\tsceneCollectionName: string;\n\t};\n\tCurrentSceneCollectionChanged: {\n\t\t/**\n\t\t * Name of the new scene collection\n\t\t */\n\t\tsceneCollectionName: string;\n\t};\n\tSceneCollectionListChanged: {\n\t\t/**\n\t\t * Updated list of scene collections\n\t\t */\n\t\tsceneCollections: string[];\n\t};\n\tCurrentProfileChanging: {\n\t\t/**\n\t\t * Name of the current profile\n\t\t */\n\t\tprofileName: string;\n\t};\n\tCurrentProfileChanged: {\n\t\t/**\n\t\t * Name of the new profile\n\t\t */\n\t\tprofileName: string;\n\t};\n\tProfileListChanged: {\n\t\t/**\n\t\t * Updated list of profiles\n\t\t */\n\t\tprofiles: string[];\n\t};\n\tSourceFilterListReindexed: {\n\t\t/**\n\t\t * Name of the source\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Array of filter objects\n\t\t */\n\t\tfilters: JsonObject[];\n\t};\n\tSourceFilterCreated: {\n\t\t/**\n\t\t * Name of the source the filter was added to\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * The kind of the filter\n\t\t */\n\t\tfilterKind: string;\n\t\t/**\n\t\t * Index position of the filter\n\t\t */\n\t\tfilterIndex: number;\n\t\t/**\n\t\t * The settings configured to the filter when it was created\n\t\t */\n\t\tfilterSettings: JsonObject;\n\t\t/**\n\t\t * The default settings for the filter\n\t\t */\n\t\tdefaultFilterSettings: JsonObject;\n\t};\n\tSourceFilterRemoved: {\n\t\t/**\n\t\t * Name of the source the filter was on\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t};\n\tSourceFilterNameChanged: {\n\t\t/**\n\t\t * The source the filter is on\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Old name of the filter\n\t\t */\n\t\toldFilterName: string;\n\t\t/**\n\t\t * New name of the filter\n\t\t */\n\t\tfilterName: string;\n\t};\n\tSourceFilterSettingsChanged: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * New settings object of the filter\n\t\t */\n\t\tfilterSettings: JsonObject;\n\t};\n\tSourceFilterEnableStateChanged: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * Whether the filter is enabled\n\t\t */\n\t\tfilterEnabled: boolean;\n\t};\n\tExitStarted: undefined;\n\tInputCreated: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * The kind of the input\n\t\t */\n\t\tinputKind: string;\n\t\t/**\n\t\t * The unversioned kind of input (aka no `_v2` stuff)\n\t\t */\n\t\tunversionedInputKind: string;\n\t\t/**\n\t\t * The settings configured to the input when it was created\n\t\t */\n\t\tinputSettings: JsonObject;\n\t\t/**\n\t\t * The default settings for the input\n\t\t */\n\t\tdefaultInputSettings: JsonObject;\n\t};\n\tInputRemoved: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t};\n\tInputNameChanged: {\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Old name of the input\n\t\t */\n\t\toldInputName: string;\n\t\t/**\n\t\t * New name of the input\n\t\t */\n\t\tinputName: string;\n\t};\n\tInputSettingsChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * New settings object of the input\n\t\t */\n\t\tinputSettings: JsonObject;\n\t};\n\tInputActiveStateChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Whether the input is active\n\t\t */\n\t\tvideoActive: boolean;\n\t};\n\tInputShowStateChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Whether the input is showing\n\t\t */\n\t\tvideoShowing: boolean;\n\t};\n\tInputMuteStateChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Whether the input is muted\n\t\t */\n\t\tinputMuted: boolean;\n\t};\n\tInputVolumeChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * New volume level multiplier\n\t\t */\n\t\tinputVolumeMul: number;\n\t\t/**\n\t\t * New volume level in dB\n\t\t */\n\t\tinputVolumeDb: number;\n\t};\n\tInputAudioBalanceChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * New audio balance value of the input\n\t\t */\n\t\tinputAudioBalance: number;\n\t};\n\tInputAudioSyncOffsetChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * New sync offset in milliseconds\n\t\t */\n\t\tinputAudioSyncOffset: number;\n\t};\n\tInputAudioTracksChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Object of audio tracks along with their associated enable states\n\t\t */\n\t\tinputAudioTracks: JsonObject;\n\t};\n\tInputAudioMonitorTypeChanged: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * New monitor type of the input\n\t\t */\n\t\tmonitorType: string;\n\t};\n\tInputVolumeMeters: {\n\t\t/**\n\t\t * Array of active inputs with their associated volume levels\n\t\t */\n\t\tinputs: JsonObject[];\n\t};\n\tMediaInputPlaybackStarted: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t};\n\tMediaInputPlaybackEnded: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t};\n\tMediaInputActionTriggered: {\n\t\t/**\n\t\t * Name of the input\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * Action performed on the input. See `ObsMediaInputAction` enum\n\t\t */\n\t\tmediaAction: string;\n\t};\n\tStreamStateChanged: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * The specific state of the output\n\t\t */\n\t\toutputState: string;\n\t};\n\tRecordStateChanged: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * The specific state of the output\n\t\t */\n\t\toutputState: string;\n\t\t/**\n\t\t * File name for the saved recording, if record stopped. `null` otherwise\n\t\t */\n\t\toutputPath: string;\n\t};\n\tRecordFileChanged: {\n\t\t/**\n\t\t * File name that the output has begun writing to\n\t\t */\n\t\tnewOutputPath: string;\n\t};\n\tReplayBufferStateChanged: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * The specific state of the output\n\t\t */\n\t\toutputState: string;\n\t};\n\tVirtualcamStateChanged: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * The specific state of the output\n\t\t */\n\t\toutputState: string;\n\t};\n\tReplayBufferSaved: {\n\t\t/**\n\t\t * Path of the saved replay file\n\t\t */\n\t\tsavedReplayPath: string;\n\t};\n\tSceneItemCreated: {\n\t\t/**\n\t\t * Name of the scene the item was added to\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene the item was added to\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Name of the underlying source (input/scene)\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * UUID of the underlying source (input/scene)\n\t\t */\n\t\tsourceUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * Index position of the item\n\t\t */\n\t\tsceneItemIndex: number;\n\t};\n\tSceneItemRemoved: {\n\t\t/**\n\t\t * Name of the scene the item was removed from\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene the item was removed from\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Name of the underlying source (input/scene)\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * UUID of the underlying source (input/scene)\n\t\t */\n\t\tsourceUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSceneItemListReindexed: {\n\t\t/**\n\t\t * Name of the scene\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Array of scene item objects\n\t\t */\n\t\tsceneItems: JsonObject[];\n\t};\n\tSceneItemEnableStateChanged: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * Whether the scene item is enabled (visible)\n\t\t */\n\t\tsceneItemEnabled: boolean;\n\t};\n\tSceneItemLockStateChanged: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * Whether the scene item is locked\n\t\t */\n\t\tsceneItemLocked: boolean;\n\t};\n\tSceneItemSelected: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSceneItemTransformChanged: {\n\t\t/**\n\t\t * The name of the scene the item is in\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * The UUID of the scene the item is in\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * New transform/crop info of the scene item\n\t\t */\n\t\tsceneItemTransform: JsonObject;\n\t};\n\tSceneCreated: {\n\t\t/**\n\t\t * Name of the new scene\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the new scene\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Whether the new scene is a group\n\t\t */\n\t\tisGroup: boolean;\n\t};\n\tSceneRemoved: {\n\t\t/**\n\t\t * Name of the removed scene\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the removed scene\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Whether the scene was a group\n\t\t */\n\t\tisGroup: boolean;\n\t};\n\tSceneNameChanged: {\n\t\t/**\n\t\t * UUID of the scene\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Old name of the scene\n\t\t */\n\t\toldSceneName: string;\n\t\t/**\n\t\t * New name of the scene\n\t\t */\n\t\tsceneName: string;\n\t};\n\tCurrentProgramSceneChanged: {\n\t\t/**\n\t\t * Name of the scene that was switched to\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene that was switched to\n\t\t */\n\t\tsceneUuid: string;\n\t};\n\tCurrentPreviewSceneChanged: {\n\t\t/**\n\t\t * Name of the scene that was switched to\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * UUID of the scene that was switched to\n\t\t */\n\t\tsceneUuid: string;\n\t};\n\tSceneListChanged: {\n\t\t/**\n\t\t * Updated array of scenes\n\t\t */\n\t\tscenes: JsonObject[];\n\t};\n\tCurrentSceneTransitionChanged: {\n\t\t/**\n\t\t * Name of the new transition\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * UUID of the new transition\n\t\t */\n\t\ttransitionUuid: string;\n\t};\n\tCurrentSceneTransitionDurationChanged: {\n\t\t/**\n\t\t * Transition duration in milliseconds\n\t\t */\n\t\ttransitionDuration: number;\n\t};\n\tSceneTransitionStarted: {\n\t\t/**\n\t\t * Scene transition name\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * Scene transition UUID\n\t\t */\n\t\ttransitionUuid: string;\n\t};\n\tSceneTransitionEnded: {\n\t\t/**\n\t\t * Scene transition name\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * Scene transition UUID\n\t\t */\n\t\ttransitionUuid: string;\n\t};\n\tSceneTransitionVideoEnded: {\n\t\t/**\n\t\t * Scene transition name\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * Scene transition UUID\n\t\t */\n\t\ttransitionUuid: string;\n\t};\n\tStudioModeStateChanged: {\n\t\t/**\n\t\t * True == Enabled, False == Disabled\n\t\t */\n\t\tstudioModeEnabled: boolean;\n\t};\n\tScreenshotSaved: {\n\t\t/**\n\t\t * Path of the saved image file\n\t\t */\n\t\tsavedScreenshotPath: string;\n\t};\n\tVendorEvent: {\n\t\t/**\n\t\t * Name of the vendor emitting the event\n\t\t */\n\t\tvendorName: string;\n\t\t/**\n\t\t * Vendor-provided event typedef\n\t\t */\n\t\teventType: string;\n\t\t/**\n\t\t * Vendor-provided event data. {} if event does not provide any data\n\t\t */\n\t\teventData: JsonObject;\n\t};\n\tCustomEvent: {\n\t\t/**\n\t\t * Custom event data\n\t\t */\n\t\teventData: JsonObject;\n\t};\n}\n\n// Requests and Responses\nexport interface OBSRequestTypes {\n\tGetPersistentData: {\n\t\t/**\n\t\t * The data realm to select. `OBS_WEBSOCKET_DATA_REALM_GLOBAL` or `OBS_WEBSOCKET_DATA_REALM_PROFILE`\n\t\t */\n\t\trealm: string;\n\t\t/**\n\t\t * The name of the slot to retrieve data from\n\t\t */\n\t\tslotName: string;\n\t};\n\tSetPersistentData: {\n\t\t/**\n\t\t * The data realm to select. `OBS_WEBSOCKET_DATA_REALM_GLOBAL` or `OBS_WEBSOCKET_DATA_REALM_PROFILE`\n\t\t */\n\t\trealm: string;\n\t\t/**\n\t\t * The name of the slot to retrieve data from\n\t\t */\n\t\tslotName: string;\n\t\t/**\n\t\t * The value to apply to the slot\n\t\t */\n\t\tslotValue: JsonValue;\n\t};\n\tGetSceneCollectionList: never;\n\tSetCurrentSceneCollection: {\n\t\t/**\n\t\t * Name of the scene collection to switch to\n\t\t */\n\t\tsceneCollectionName: string;\n\t};\n\tCreateSceneCollection: {\n\t\t/**\n\t\t * Name for the new scene collection\n\t\t */\n\t\tsceneCollectionName: string;\n\t};\n\tGetProfileList: never;\n\tSetCurrentProfile: {\n\t\t/**\n\t\t * Name of the profile to switch to\n\t\t */\n\t\tprofileName: string;\n\t};\n\tCreateProfile: {\n\t\t/**\n\t\t * Name for the new profile\n\t\t */\n\t\tprofileName: string;\n\t};\n\tRemoveProfile: {\n\t\t/**\n\t\t * Name of the profile to remove\n\t\t */\n\t\tprofileName: string;\n\t};\n\tGetProfileParameter: {\n\t\t/**\n\t\t * Category of the parameter to get\n\t\t */\n\t\tparameterCategory: string;\n\t\t/**\n\t\t * Name of the parameter to get\n\t\t */\n\t\tparameterName: string;\n\t};\n\tSetProfileParameter: {\n\t\t/**\n\t\t * Category of the parameter to set\n\t\t */\n\t\tparameterCategory: string;\n\t\t/**\n\t\t * Name of the parameter to set\n\t\t */\n\t\tparameterName: string;\n\t\t/**\n\t\t * Value of the parameter to set. Use `null` to delete\n\t\t */\n\t\tparameterValue: string;\n\t};\n\tGetVideoSettings: never;\n\tSetVideoSettings: {\n\t\t/**\n\t\t * Numerator of the fractional FPS value\n\t\t * @restrictions >= 1\n\t\t * @defaultValue Not changed\n\t\t */\n\t\tfpsNumerator?: number;\n\t\t/**\n\t\t * Denominator of the fractional FPS value\n\t\t * @restrictions >= 1\n\t\t * @defaultValue Not changed\n\t\t */\n\t\tfpsDenominator?: number;\n\t\t/**\n\t\t * Width of the base (canvas) resolution in pixels\n\t\t * @restrictions >= 1, <= 4096\n\t\t * @defaultValue Not changed\n\t\t */\n\t\tbaseWidth?: number;\n\t\t/**\n\t\t * Height of the base (canvas) resolution in pixels\n\t\t * @restrictions >= 1, <= 4096\n\t\t * @defaultValue Not changed\n\t\t */\n\t\tbaseHeight?: number;\n\t\t/**\n\t\t * Width of the output resolution in pixels\n\t\t * @restrictions >= 1, <= 4096\n\t\t * @defaultValue Not changed\n\t\t */\n\t\toutputWidth?: number;\n\t\t/**\n\t\t * Height of the output resolution in pixels\n\t\t * @restrictions >= 1, <= 4096\n\t\t * @defaultValue Not changed\n\t\t */\n\t\toutputHeight?: number;\n\t};\n\tGetStreamServiceSettings: never;\n\tSetStreamServiceSettings: {\n\t\t/**\n\t\t * Type of stream service to apply. Example: `rtmp_common` or `rtmp_custom`\n\t\t */\n\t\tstreamServiceType: string;\n\t\t/**\n\t\t * Settings to apply to the service\n\t\t */\n\t\tstreamServiceSettings: JsonObject;\n\t};\n\tGetRecordDirectory: never;\n\tSetRecordDirectory: {\n\t\t/**\n\t\t * Output directory\n\t\t */\n\t\trecordDirectory: string;\n\t};\n\tGetSourceFilterKindList: never;\n\tGetSourceFilterList: {\n\t\t/**\n\t\t * Name of the source\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t};\n\tGetSourceFilterDefaultSettings: {\n\t\t/**\n\t\t * Filter kind to get the default settings for\n\t\t */\n\t\tfilterKind: string;\n\t};\n\tCreateSourceFilter: {\n\t\t/**\n\t\t * Name of the source to add the filter to\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to add the filter to\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the new filter to be created\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * The kind of filter to be created\n\t\t */\n\t\tfilterKind: string;\n\t\t/**\n\t\t * Settings object to initialize the filter with\n\t\t * @defaultValue Default settings used\n\t\t */\n\t\tfilterSettings?: JsonObject;\n\t};\n\tRemoveSourceFilter: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the filter to remove\n\t\t */\n\t\tfilterName: string;\n\t};\n\tSetSourceFilterName: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Current name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * New name for the filter\n\t\t */\n\t\tnewFilterName: string;\n\t};\n\tGetSourceFilter: {\n\t\t/**\n\t\t * Name of the source\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t};\n\tSetSourceFilterIndex: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * New index position of the filter\n\t\t * @restrictions >= 0\n\t\t */\n\t\tfilterIndex: number;\n\t};\n\tSetSourceFilterSettings: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the filter to set the settings of\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * Object of settings to apply\n\t\t */\n\t\tfilterSettings: JsonObject;\n\t\t/**\n\t\t * True == apply the settings on top of existing ones, False == reset the input to its defaults, then apply settings.\n\t\t * @defaultValue true\n\t\t */\n\t\toverlay?: boolean;\n\t};\n\tSetSourceFilterEnabled: {\n\t\t/**\n\t\t * Name of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source the filter is on\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Name of the filter\n\t\t */\n\t\tfilterName: string;\n\t\t/**\n\t\t * New enable state of the filter\n\t\t */\n\t\tfilterEnabled: boolean;\n\t};\n\tGetVersion: never;\n\tGetStats: never;\n\tBroadcastCustomEvent: {\n\t\t/**\n\t\t * Data payload to emit to all receivers\n\t\t */\n\t\teventData: JsonObject;\n\t};\n\tCallVendorRequest: {\n\t\t/**\n\t\t * Name of the vendor to use\n\t\t */\n\t\tvendorName: string;\n\t\t/**\n\t\t * The request type to call\n\t\t */\n\t\trequestType: string;\n\t\t/**\n\t\t * Object containing appropriate request data\n\t\t * @defaultValue {}\n\t\t */\n\t\trequestData?: JsonObject;\n\t};\n\tGetHotkeyList: never;\n\tTriggerHotkeyByName: {\n\t\t/**\n\t\t * Name of the hotkey to trigger\n\t\t */\n\t\thotkeyName: string;\n\t\t/**\n\t\t * Name of context of the hotkey to trigger\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tcontextName?: string;\n\t};\n\tTriggerHotkeyByKeySequence: {\n\t\t/**\n\t\t * The OBS key ID to use. See https://github.com/obsproject/obs-studio/blob/master/libobs/obs-hotkeys.h\n\t\t * @defaultValue Not pressed\n\t\t */\n\t\tkeyId?: string;\n\t\t/**\n\t\t * Object containing key modifiers to apply\n\t\t * @defaultValue Ignored\n\t\t */\n\t\tkeyModifiers?: {\n\t\t\t/**\n\t\t\t * Press Shift\n\t\t\t * @defaultValue Not pressed\n\t\t\t */\n\t\t\tshift?: boolean;\n\t\t\t/**\n\t\t\t * Press CTRL\n\t\t\t * @defaultValue Not pressed\n\t\t\t */\n\t\t\tcontrol?: boolean;\n\t\t\t/**\n\t\t\t * Press ALT\n\t\t\t * @defaultValue Not pressed\n\t\t\t */\n\t\t\talt?: boolean;\n\t\t\t/**\n\t\t\t * Press CMD (Mac)\n\t\t\t * @defaultValue Not pressed\n\t\t\t */\n\t\t\tcommand?: boolean;\n\t\t};\n\t};\n\tSleep: {\n\t\t/**\n\t\t * Number of milliseconds to sleep for (if `SERIAL_REALTIME` mode)\n\t\t * @restrictions >= 0, <= 50000\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsleepMillis?: number;\n\t\t/**\n\t\t * Number of frames to sleep for (if `SERIAL_FRAME` mode)\n\t\t * @restrictions >= 0, <= 10000\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsleepFrames?: number;\n\t};\n\tGetInputList: {\n\t\t/**\n\t\t * Restrict the array to only inputs of the specified kind\n\t\t * @defaultValue All kinds included\n\t\t */\n\t\tinputKind?: string;\n\t};\n\tGetInputKindList: {\n\t\t/**\n\t\t * True == Return all kinds as unversioned, False == Return with version suffixes (if available)\n\t\t * @defaultValue false\n\t\t */\n\t\tunversioned?: boolean;\n\t};\n\tGetSpecialInputs: never;\n\tCreateInput: {\n\t\t/**\n\t\t * Name of the scene to add the input to as a scene item\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to add the input to as a scene item\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Name of the new input to created\n\t\t */\n\t\tinputName: string;\n\t\t/**\n\t\t * The kind of input to be created\n\t\t */\n\t\tinputKind: string;\n\t\t/**\n\t\t * Settings object to initialize the input with\n\t\t * @defaultValue Default settings used\n\t\t */\n\t\tinputSettings?: JsonObject;\n\t\t/**\n\t\t * Whether to set the created scene item to enabled or disabled\n\t\t * @defaultValue True\n\t\t */\n\t\tsceneItemEnabled?: boolean;\n\t};\n\tRemoveInput: {\n\t\t/**\n\t\t * Name of the input to remove\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to remove\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputName: {\n\t\t/**\n\t\t * Current input name\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * Current input UUID\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * New name for the input\n\t\t */\n\t\tnewInputName: string;\n\t};\n\tGetInputDefaultSettings: {\n\t\t/**\n\t\t * Input kind to get the default settings for\n\t\t */\n\t\tinputKind: string;\n\t};\n\tGetInputSettings: {\n\t\t/**\n\t\t * Name of the input to get the settings of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to get the settings of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputSettings: {\n\t\t/**\n\t\t * Name of the input to set the settings of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the settings of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Object of settings to apply\n\t\t */\n\t\tinputSettings: JsonObject;\n\t\t/**\n\t\t * True == apply the settings on top of existing ones, False == reset the input to its defaults, then apply settings.\n\t\t * @defaultValue true\n\t\t */\n\t\toverlay?: boolean;\n\t};\n\tGetInputMute: {\n\t\t/**\n\t\t * Name of input to get the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of input to get the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputMute: {\n\t\t/**\n\t\t * Name of the input to set the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Whether to mute the input or not\n\t\t */\n\t\tinputMuted: boolean;\n\t};\n\tToggleInputMute: {\n\t\t/**\n\t\t * Name of the input to toggle the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to toggle the mute state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tGetInputVolume: {\n\t\t/**\n\t\t * Name of the input to get the volume of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to get the volume of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputVolume: {\n\t\t/**\n\t\t * Name of the input to set the volume of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the volume of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Volume setting in mul\n\t\t * @restrictions >= 0, <= 20\n\t\t * @defaultValue `inputVolumeDb` should be specified\n\t\t */\n\t\tinputVolumeMul?: number;\n\t\t/**\n\t\t * Volume setting in dB\n\t\t * @restrictions >= -100, <= 26\n\t\t * @defaultValue `inputVolumeMul` should be specified\n\t\t */\n\t\tinputVolumeDb?: number;\n\t};\n\tGetInputAudioBalance: {\n\t\t/**\n\t\t * Name of the input to get the audio balance of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to get the audio balance of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputAudioBalance: {\n\t\t/**\n\t\t * Name of the input to set the audio balance of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the audio balance of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * New audio balance value\n\t\t * @restrictions >= 0.0, <= 1.0\n\t\t */\n\t\tinputAudioBalance: number;\n\t};\n\tGetInputAudioSyncOffset: {\n\t\t/**\n\t\t * Name of the input to get the audio sync offset of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to get the audio sync offset of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputAudioSyncOffset: {\n\t\t/**\n\t\t * Name of the input to set the audio sync offset of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the audio sync offset of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * New audio sync offset in milliseconds\n\t\t * @restrictions >= -950, <= 20000\n\t\t */\n\t\tinputAudioSyncOffset: number;\n\t};\n\tGetInputAudioMonitorType: {\n\t\t/**\n\t\t * Name of the input to get the audio monitor type of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to get the audio monitor type of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputAudioMonitorType: {\n\t\t/**\n\t\t * Name of the input to set the audio monitor type of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to set the audio monitor type of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Audio monitor type\n\t\t */\n\t\tmonitorType: string;\n\t};\n\tGetInputAudioTracks: {\n\t\t/**\n\t\t * Name of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetInputAudioTracks: {\n\t\t/**\n\t\t * Name of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Track settings to apply\n\t\t */\n\t\tinputAudioTracks: JsonObject;\n\t};\n\tGetInputPropertiesListPropertyItems: {\n\t\t/**\n\t\t * Name of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Name of the list property to get the items of\n\t\t */\n\t\tpropertyName: string;\n\t};\n\tPressInputPropertiesButton: {\n\t\t/**\n\t\t * Name of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Name of the button property to press\n\t\t */\n\t\tpropertyName: string;\n\t};\n\tGetMediaInputStatus: {\n\t\t/**\n\t\t * Name of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tSetMediaInputCursor: {\n\t\t/**\n\t\t * Name of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * New cursor position to set\n\t\t * @restrictions >= 0\n\t\t */\n\t\tmediaCursor: number;\n\t};\n\tOffsetMediaInputCursor: {\n\t\t/**\n\t\t * Name of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Value to offset the current cursor position by\n\t\t */\n\t\tmediaCursorOffset: number;\n\t};\n\tTriggerMediaInputAction: {\n\t\t/**\n\t\t * Name of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the media input\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t\t/**\n\t\t * Identifier of the `ObsMediaInputAction` enum\n\t\t */\n\t\tmediaAction: string;\n\t};\n\tGetVirtualCamStatus: never;\n\tToggleVirtualCam: never;\n\tStartVirtualCam: never;\n\tStopVirtualCam: never;\n\tGetReplayBufferStatus: never;\n\tToggleReplayBuffer: never;\n\tStartReplayBuffer: never;\n\tStopReplayBuffer: never;\n\tSaveReplayBuffer: never;\n\tGetLastReplayBufferReplay: never;\n\tGetOutputList: never;\n\tGetOutputStatus: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t};\n\tToggleOutput: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t};\n\tStartOutput: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t};\n\tStopOutput: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t};\n\tGetOutputSettings: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t};\n\tSetOutputSettings: {\n\t\t/**\n\t\t * Output name\n\t\t */\n\t\toutputName: string;\n\t\t/**\n\t\t * Output settings\n\t\t */\n\t\toutputSettings: JsonObject;\n\t};\n\tGetRecordStatus: never;\n\tToggleRecord: never;\n\tStartRecord: never;\n\tStopRecord: never;\n\tToggleRecordPause: never;\n\tPauseRecord: never;\n\tResumeRecord: never;\n\tSplitRecordFile: never;\n\tCreateRecordChapter: {\n\t\t/**\n\t\t * Name of the new chapter\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tchapterName?: string;\n\t};\n\tGetSceneItemList: {\n\t\t/**\n\t\t * Name of the scene to get the items of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to get the items of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tGetGroupSceneItemList: {\n\t\t/**\n\t\t * Name of the group to get the items of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the group to get the items of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tGetSceneItemId: {\n\t\t/**\n\t\t * Name of the scene or group to search in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene or group to search in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Name of the source to find\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * Number of matches to skip during search. >= 0 means first forward. -1 means last (top) item\n\t\t * @restrictions >= -1\n\t\t * @defaultValue 0\n\t\t */\n\t\tsearchOffset?: number;\n\t};\n\tGetSceneItemSource: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tCreateSceneItem: {\n\t\t/**\n\t\t * Name of the scene to create the new item in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to create the new item in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Name of the source to add to the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to add to the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Enable state to apply to the scene item on creation\n\t\t * @defaultValue True\n\t\t */\n\t\tsceneItemEnabled?: boolean;\n\t};\n\tRemoveSceneItem: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tDuplicateSceneItem: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * Name of the scene to create the duplicated item in\n\t\t * @defaultValue From scene is assumed\n\t\t */\n\t\tdestinationSceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to create the duplicated item in\n\t\t * @defaultValue From scene is assumed\n\t\t */\n\t\tdestinationSceneUuid?: string;\n\t};\n\tGetSceneItemTransform: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSetSceneItemTransform: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * Object containing scene item transform info to update\n\t\t */\n\t\tsceneItemTransform: JsonObject;\n\t};\n\tGetSceneItemEnabled: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSetSceneItemEnabled: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * New enable state of the scene item\n\t\t */\n\t\tsceneItemEnabled: boolean;\n\t};\n\tGetSceneItemLocked: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSetSceneItemLocked: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * New lock state of the scene item\n\t\t */\n\t\tsceneItemLocked: boolean;\n\t};\n\tGetSceneItemIndex: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSetSceneItemIndex: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * New index position of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemIndex: number;\n\t};\n\tGetSceneItemBlendMode: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tSetSceneItemBlendMode: {\n\t\t/**\n\t\t * Name of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene the item is in\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t * @restrictions >= 0\n\t\t */\n\t\tsceneItemId: number;\n\t\t/**\n\t\t * New blend mode\n\t\t */\n\t\tsceneItemBlendMode: string;\n\t};\n\tGetSceneList: never;\n\tGetGroupList: never;\n\tGetCurrentProgramScene: never;\n\tSetCurrentProgramScene: {\n\t\t/**\n\t\t * Scene name to set as the current program scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * Scene UUID to set as the current program scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tGetCurrentPreviewScene: never;\n\tSetCurrentPreviewScene: {\n\t\t/**\n\t\t * Scene name to set as the current preview scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * Scene UUID to set as the current preview scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tCreateScene: {\n\t\t/**\n\t\t * Name for the new scene\n\t\t */\n\t\tsceneName: string;\n\t};\n\tRemoveScene: {\n\t\t/**\n\t\t * Name of the scene to remove\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to remove\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tSetSceneName: {\n\t\t/**\n\t\t * Name of the scene to be renamed\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene to be renamed\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * New name for the scene\n\t\t */\n\t\tnewSceneName: string;\n\t};\n\tGetSceneSceneTransitionOverride: {\n\t\t/**\n\t\t * Name of the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t};\n\tSetSceneSceneTransitionOverride: {\n\t\t/**\n\t\t * Name of the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneName?: string;\n\t\t/**\n\t\t * UUID of the scene\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsceneUuid?: string;\n\t\t/**\n\t\t * Name of the scene transition to use as override. Specify `null` to remove\n\t\t * @defaultValue Unchanged\n\t\t */\n\t\ttransitionName?: string;\n\t\t/**\n\t\t * Duration to use for any overridden transition. Specify `null` to remove\n\t\t * @restrictions >= 50, <= 20000\n\t\t * @defaultValue Unchanged\n\t\t */\n\t\ttransitionDuration?: number;\n\t};\n\tGetSourceActive: {\n\t\t/**\n\t\t * Name of the source to get the active state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to get the active state of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t};\n\tGetSourceScreenshot: {\n\t\t/**\n\t\t * Name of the source to take a screenshot of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to take a screenshot of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Image compression format to use. Use `GetVersion` to get compatible image formats\n\t\t */\n\t\timageFormat: string;\n\t\t/**\n\t\t * Width to scale the screenshot to\n\t\t * @restrictions >= 8, <= 4096\n\t\t * @defaultValue Source value is used\n\t\t */\n\t\timageWidth?: number;\n\t\t/**\n\t\t * Height to scale the screenshot to\n\t\t * @restrictions >= 8, <= 4096\n\t\t * @defaultValue Source value is used\n\t\t */\n\t\timageHeight?: number;\n\t\t/**\n\t\t * Compression quality to use. 0 for high compression, 100 for uncompressed. -1 to use \"default\" (whatever that means, idk)\n\t\t * @restrictions >= -1, <= 100\n\t\t * @defaultValue -1\n\t\t */\n\t\timageCompressionQuality?: number;\n\t};\n\tSaveSourceScreenshot: {\n\t\t/**\n\t\t * Name of the source to take a screenshot of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to take a screenshot of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Image compression format to use. Use `GetVersion` to get compatible image formats\n\t\t */\n\t\timageFormat: string;\n\t\t/**\n\t\t * Path to save the screenshot file to. Eg. `C:\\Users\\user\\Desktop\\screenshot.png`\n\t\t */\n\t\timageFilePath: string;\n\t\t/**\n\t\t * Width to scale the screenshot to\n\t\t * @restrictions >= 8, <= 4096\n\t\t * @defaultValue Source value is used\n\t\t */\n\t\timageWidth?: number;\n\t\t/**\n\t\t * Height to scale the screenshot to\n\t\t * @restrictions >= 8, <= 4096\n\t\t * @defaultValue Source value is used\n\t\t */\n\t\timageHeight?: number;\n\t\t/**\n\t\t * Compression quality to use. 0 for high compression, 100 for uncompressed. -1 to use \"default\" (whatever that means, idk)\n\t\t * @restrictions >= -1, <= 100\n\t\t * @defaultValue -1\n\t\t */\n\t\timageCompressionQuality?: number;\n\t};\n\tGetStreamStatus: never;\n\tToggleStream: never;\n\tStartStream: never;\n\tStopStream: never;\n\tSendStreamCaption: {\n\t\t/**\n\t\t * Caption text\n\t\t */\n\t\tcaptionText: string;\n\t};\n\tGetTransitionKindList: never;\n\tGetSceneTransitionList: never;\n\tGetCurrentSceneTransition: never;\n\tSetCurrentSceneTransition: {\n\t\t/**\n\t\t * Name of the transition to make active\n\t\t */\n\t\ttransitionName: string;\n\t};\n\tSetCurrentSceneTransitionDuration: {\n\t\t/**\n\t\t * Duration in milliseconds\n\t\t * @restrictions >= 50, <= 20000\n\t\t */\n\t\ttransitionDuration: number;\n\t};\n\tSetCurrentSceneTransitionSettings: {\n\t\t/**\n\t\t * Settings object to apply to the transition. Can be `{}`\n\t\t */\n\t\ttransitionSettings: JsonObject;\n\t\t/**\n\t\t * Whether to overlay over the current settings or replace them\n\t\t * @defaultValue true\n\t\t */\n\t\toverlay?: boolean;\n\t};\n\tGetCurrentSceneTransitionCursor: never;\n\tTriggerStudioModeTransition: never;\n\tSetTBarPosition: {\n\t\t/**\n\t\t * New position\n\t\t * @restrictions >= 0.0, <= 1.0\n\t\t */\n\t\tposition: number;\n\t\t/**\n\t\t * Whether to release the TBar. Only set `false` if you know that you will be sending another position update\n\t\t * @defaultValue `true`\n\t\t */\n\t\trelease?: boolean;\n\t};\n\tGetStudioModeEnabled: never;\n\tSetStudioModeEnabled: {\n\t\t/**\n\t\t * True == Enabled, False == Disabled\n\t\t */\n\t\tstudioModeEnabled: boolean;\n\t};\n\tOpenInputPropertiesDialog: {\n\t\t/**\n\t\t * Name of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tOpenInputFiltersDialog: {\n\t\t/**\n\t\t * Name of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tOpenInputInteractDialog: {\n\t\t/**\n\t\t * Name of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputName?: string;\n\t\t/**\n\t\t * UUID of the input to open the dialog of\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tinputUuid?: string;\n\t};\n\tGetMonitorList: never;\n\tOpenVideoMixProjector: {\n\t\t/**\n\t\t * Type of mix to open\n\t\t */\n\t\tvideoMixType: string;\n\t\t/**\n\t\t * Monitor index, use `GetMonitorList` to obtain index\n\t\t * @defaultValue -1: Opens projector in windowed mode\n\t\t */\n\t\tmonitorIndex?: number;\n\t\t/**\n\t\t * Size/Position data for a windowed projector, in Qt Base64 encoded format. Mutually exclusive with `monitorIndex`\n\t\t * @defaultValue N/A\n\t\t */\n\t\tprojectorGeometry?: string;\n\t};\n\tOpenSourceProjector: {\n\t\t/**\n\t\t * Name of the source to open a projector for\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceName?: string;\n\t\t/**\n\t\t * UUID of the source to open a projector for\n\t\t * @defaultValue Unknown\n\t\t */\n\t\tsourceUuid?: string;\n\t\t/**\n\t\t * Monitor index, use `GetMonitorList` to obtain index\n\t\t * @defaultValue -1: Opens projector in windowed mode\n\t\t */\n\t\tmonitorIndex?: number;\n\t\t/**\n\t\t * Size/Position data for a windowed projector, in Qt Base64 encoded format. Mutually exclusive with `monitorIndex`\n\t\t * @defaultValue N/A\n\t\t */\n\t\tprojectorGeometry?: string;\n\t};\n}\n\nexport interface OBSResponseTypes {\n\tGetPersistentData: {\n\t\t/**\n\t\t * Value associated with the slot. `null` if not set\n\t\t */\n\t\tslotValue: JsonValue;\n\t};\n\tSetPersistentData: undefined;\n\tGetSceneCollectionList: {\n\t\t/**\n\t\t * The name of the current scene collection\n\t\t */\n\t\tcurrentSceneCollectionName: string;\n\t\t/**\n\t\t * Array of all available scene collections\n\t\t */\n\t\tsceneCollections: string[];\n\t};\n\tSetCurrentSceneCollection: undefined;\n\tCreateSceneCollection: undefined;\n\tGetProfileList: {\n\t\t/**\n\t\t * The name of the current profile\n\t\t */\n\t\tcurrentProfileName: string;\n\t\t/**\n\t\t * Array of all available profiles\n\t\t */\n\t\tprofiles: string[];\n\t};\n\tSetCurrentProfile: undefined;\n\tCreateProfile: undefined;\n\tRemoveProfile: undefined;\n\tGetProfileParameter: {\n\t\t/**\n\t\t * Value associated with the parameter. `null` if not set and no default\n\t\t */\n\t\tparameterValue: string;\n\t\t/**\n\t\t * Default value associated with the parameter. `null` if no default\n\t\t */\n\t\tdefaultParameterValue: string;\n\t};\n\tSetProfileParameter: undefined;\n\tGetVideoSettings: {\n\t\t/**\n\t\t * Numerator of the fractional FPS value\n\t\t */\n\t\tfpsNumerator: number;\n\t\t/**\n\t\t * Denominator of the fractional FPS value\n\t\t */\n\t\tfpsDenominator: number;\n\t\t/**\n\t\t * Width of the base (canvas) resolution in pixels\n\t\t */\n\t\tbaseWidth: number;\n\t\t/**\n\t\t * Height of the base (canvas) resolution in pixels\n\t\t */\n\t\tbaseHeight: number;\n\t\t/**\n\t\t * Width of the output resolution in pixels\n\t\t */\n\t\toutputWidth: number;\n\t\t/**\n\t\t * Height of the output resolution in pixels\n\t\t */\n\t\toutputHeight: number;\n\t};\n\tSetVideoSettings: undefined;\n\tGetStreamServiceSettings: {\n\t\t/**\n\t\t * Stream service type, like `rtmp_custom` or `rtmp_common`\n\t\t */\n\t\tstreamServiceType: string;\n\t\t/**\n\t\t * Stream service settings\n\t\t */\n\t\tstreamServiceSettings: JsonObject;\n\t};\n\tSetStreamServiceSettings: undefined;\n\tGetRecordDirectory: {\n\t\t/**\n\t\t * Output directory\n\t\t */\n\t\trecordDirectory: string;\n\t};\n\tSetRecordDirectory: undefined;\n\tGetSourceFilterKindList: {\n\t\t/**\n\t\t * Array of source filter kinds\n\t\t */\n\t\tsourceFilterKinds: string[];\n\t};\n\tGetSourceFilterList: {\n\t\t/**\n\t\t * Array of filters\n\t\t */\n\t\tfilters: JsonObject[];\n\t};\n\tGetSourceFilterDefaultSettings: {\n\t\t/**\n\t\t * Object of default settings for the filter kind\n\t\t */\n\t\tdefaultFilterSettings: JsonObject;\n\t};\n\tCreateSourceFilter: undefined;\n\tRemoveSourceFilter: undefined;\n\tSetSourceFilterName: undefined;\n\tGetSourceFilter: {\n\t\t/**\n\t\t * Whether the filter is enabled\n\t\t */\n\t\tfilterEnabled: boolean;\n\t\t/**\n\t\t * Index of the filter in the list, beginning at 0\n\t\t */\n\t\tfilterIndex: number;\n\t\t/**\n\t\t * The kind of filter\n\t\t */\n\t\tfilterKind: string;\n\t\t/**\n\t\t * Settings object associated with the filter\n\t\t */\n\t\tfilterSettings: JsonObject;\n\t};\n\tSetSourceFilterIndex: undefined;\n\tSetSourceFilterSettings: undefined;\n\tSetSourceFilterEnabled: undefined;\n\tGetVersion: {\n\t\t/**\n\t\t * Current OBS Studio version\n\t\t */\n\t\tobsVersion: string;\n\t\t/**\n\t\t * Current obs-websocket version\n\t\t */\n\t\tobsWebSocketVersion: string;\n\t\t/**\n\t\t * Current latest obs-websocket RPC version\n\t\t */\n\t\trpcVersion: number;\n\t\t/**\n\t\t * Array of available RPC requests for the currently negotiated RPC version\n\t\t */\n\t\tavailableRequests: string[];\n\t\t/**\n\t\t * Image formats available in `GetSourceScreenshot` and `SaveSourceScreenshot` requests.\n\t\t */\n\t\tsupportedImageFormats: string[];\n\t\t/**\n\t\t * Name of the platform. Usually `windows`, `macos`, or `ubuntu` (linux flavor). Not guaranteed to be any of those\n\t\t */\n\t\tplatform: string;\n\t\t/**\n\t\t * Description of the platform, like `Windows 10 (10.0)`\n\t\t */\n\t\tplatformDescription: string;\n\t};\n\tGetStats: {\n\t\t/**\n\t\t * Current CPU usage in percent\n\t\t */\n\t\tcpuUsage: number;\n\t\t/**\n\t\t * Amount of memory in MB currently being used by OBS\n\t\t */\n\t\tmemoryUsage: number;\n\t\t/**\n\t\t * Available disk space on the device being used for recording storage\n\t\t */\n\t\tavailableDiskSpace: number;\n\t\t/**\n\t\t * Current FPS being rendered\n\t\t */\n\t\tactiveFps: number;\n\t\t/**\n\t\t * Average time in milliseconds that OBS is taking to render a frame\n\t\t */\n\t\taverageFrameRenderTime: number;\n\t\t/**\n\t\t * Number of frames skipped by OBS in the render thread\n\t\t */\n\t\trenderSkippedFrames: number;\n\t\t/**\n\t\t * Total number of frames outputted by the render thread\n\t\t */\n\t\trenderTotalFrames: number;\n\t\t/**\n\t\t * Number of frames skipped by OBS in the output thread\n\t\t */\n\t\toutputSkippedFrames: number;\n\t\t/**\n\t\t * Total number of frames outputted by the output thread\n\t\t */\n\t\toutputTotalFrames: number;\n\t\t/**\n\t\t * Total number of messages received by obs-websocket from the client\n\t\t */\n\t\twebSocketSessionIncomingMessages: number;\n\t\t/**\n\t\t * Total number of messages sent by obs-websocket to the client\n\t\t */\n\t\twebSocketSessionOutgoingMessages: number;\n\t};\n\tBroadcastCustomEvent: undefined;\n\tCallVendorRequest: {\n\t\t/**\n\t\t * Echoed of `vendorName`\n\t\t */\n\t\tvendorName: string;\n\t\t/**\n\t\t * Echoed of `requestType`\n\t\t */\n\t\trequestType: string;\n\t\t/**\n\t\t * Object containing appropriate response data. {} if request does not provide any response data\n\t\t */\n\t\tresponseData: JsonObject;\n\t};\n\tGetHotkeyList: {\n\t\t/**\n\t\t * Array of hotkey names\n\t\t */\n\t\thotkeys: string[];\n\t};\n\tTriggerHotkeyByName: undefined;\n\tTriggerHotkeyByKeySequence: undefined;\n\tSleep: undefined;\n\tGetInputList: {\n\t\t/**\n\t\t * Array of inputs\n\t\t */\n\t\tinputs: JsonObject[];\n\t};\n\tGetInputKindList: {\n\t\t/**\n\t\t * Array of input kinds\n\t\t */\n\t\tinputKinds: string[];\n\t};\n\tGetSpecialInputs: {\n\t\t/**\n\t\t * Name of the Desktop Audio input\n\t\t */\n\t\tdesktop1: string;\n\t\t/**\n\t\t * Name of the Desktop Audio 2 input\n\t\t */\n\t\tdesktop2: string;\n\t\t/**\n\t\t * Name of the Mic/Auxiliary Audio input\n\t\t */\n\t\tmic1: string;\n\t\t/**\n\t\t * Name of the Mic/Auxiliary Audio 2 input\n\t\t */\n\t\tmic2: string;\n\t\t/**\n\t\t * Name of the Mic/Auxiliary Audio 3 input\n\t\t */\n\t\tmic3: string;\n\t\t/**\n\t\t * Name of the Mic/Auxiliary Audio 4 input\n\t\t */\n\t\tmic4: string;\n\t};\n\tCreateInput: {\n\t\t/**\n\t\t * UUID of the newly created input\n\t\t */\n\t\tinputUuid: string;\n\t\t/**\n\t\t * ID of the newly created scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tRemoveInput: undefined;\n\tSetInputName: undefined;\n\tGetInputDefaultSettings: {\n\t\t/**\n\t\t * Object of default settings for the input kind\n\t\t */\n\t\tdefaultInputSettings: JsonObject;\n\t};\n\tGetInputSettings: {\n\t\t/**\n\t\t * Object of settings for the input\n\t\t */\n\t\tinputSettings: JsonObject;\n\t\t/**\n\t\t * The kind of the input\n\t\t */\n\t\tinputKind: string;\n\t};\n\tSetInputSettings: undefined;\n\tGetInputMute: {\n\t\t/**\n\t\t * Whether the input is muted\n\t\t */\n\t\tinputMuted: boolean;\n\t};\n\tSetInputMute: undefined;\n\tToggleInputMute: {\n\t\t/**\n\t\t * Whether the input has been muted or unmuted\n\t\t */\n\t\tinputMuted: boolean;\n\t};\n\tGetInputVolume: {\n\t\t/**\n\t\t * Volume setting in mul\n\t\t */\n\t\tinputVolumeMul: number;\n\t\t/**\n\t\t * Volume setting in dB\n\t\t */\n\t\tinputVolumeDb: number;\n\t};\n\tSetInputVolume: undefined;\n\tGetInputAudioBalance: {\n\t\t/**\n\t\t * Audio balance value from 0.0-1.0\n\t\t */\n\t\tinputAudioBalance: number;\n\t};\n\tSetInputAudioBalance: undefined;\n\tGetInputAudioSyncOffset: {\n\t\t/**\n\t\t * Audio sync offset in milliseconds\n\t\t */\n\t\tinputAudioSyncOffset: number;\n\t};\n\tSetInputAudioSyncOffset: undefined;\n\tGetInputAudioMonitorType: {\n\t\t/**\n\t\t * Audio monitor type\n\t\t */\n\t\tmonitorType: string;\n\t};\n\tSetInputAudioMonitorType: undefined;\n\tGetInputAudioTracks: {\n\t\t/**\n\t\t * Object of audio tracks and associated enable states\n\t\t */\n\t\tinputAudioTracks: JsonObject;\n\t};\n\tSetInputAudioTracks: undefined;\n\tGetInputPropertiesListPropertyItems: {\n\t\t/**\n\t\t * Array of items in the list property\n\t\t */\n\t\tpropertyItems: JsonObject[];\n\t};\n\tPressInputPropertiesButton: undefined;\n\tGetMediaInputStatus: {\n\t\t/**\n\t\t * State of the media input\n\t\t */\n\t\tmediaState: string;\n\t\t/**\n\t\t * Total duration of the playing media in milliseconds. `null` if not playing\n\t\t */\n\t\tmediaDuration: number;\n\t\t/**\n\t\t * Position of the cursor in milliseconds. `null` if not playing\n\t\t */\n\t\tmediaCursor: number;\n\t};\n\tSetMediaInputCursor: undefined;\n\tOffsetMediaInputCursor: undefined;\n\tTriggerMediaInputAction: undefined;\n\tGetVirtualCamStatus: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tToggleVirtualCam: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tStartVirtualCam: undefined;\n\tStopVirtualCam: undefined;\n\tGetReplayBufferStatus: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tToggleReplayBuffer: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tStartReplayBuffer: undefined;\n\tStopReplayBuffer: undefined;\n\tSaveReplayBuffer: undefined;\n\tGetLastReplayBufferReplay: {\n\t\t/**\n\t\t * File path\n\t\t */\n\t\tsavedReplayPath: string;\n\t};\n\tGetOutputList: {\n\t\t/**\n\t\t * Array of outputs\n\t\t */\n\t\toutputs: JsonObject[];\n\t};\n\tGetOutputStatus: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * Whether the output is reconnecting\n\t\t */\n\t\toutputReconnecting: boolean;\n\t\t/**\n\t\t * Current formatted timecode string for the output\n\t\t */\n\t\toutputTimecode: string;\n\t\t/**\n\t\t * Current duration in milliseconds for the output\n\t\t */\n\t\toutputDuration: number;\n\t\t/**\n\t\t * Congestion of the output\n\t\t */\n\t\toutputCongestion: number;\n\t\t/**\n\t\t * Number of bytes sent by the output\n\t\t */\n\t\toutputBytes: number;\n\t\t/**\n\t\t * Number of frames skipped by the output's process\n\t\t */\n\t\toutputSkippedFrames: number;\n\t\t/**\n\t\t * Total number of frames delivered by the output's process\n\t\t */\n\t\toutputTotalFrames: number;\n\t};\n\tToggleOutput: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tStartOutput: undefined;\n\tStopOutput: undefined;\n\tGetOutputSettings: {\n\t\t/**\n\t\t * Output settings\n\t\t */\n\t\toutputSettings: JsonObject;\n\t};\n\tSetOutputSettings: undefined;\n\tGetRecordStatus: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * Whether the output is paused\n\t\t */\n\t\toutputPaused: boolean;\n\t\t/**\n\t\t * Current formatted timecode string for the output\n\t\t */\n\t\toutputTimecode: string;\n\t\t/**\n\t\t * Current duration in milliseconds for the output\n\t\t */\n\t\toutputDuration: number;\n\t\t/**\n\t\t * Number of bytes sent by the output\n\t\t */\n\t\toutputBytes: number;\n\t};\n\tToggleRecord: {\n\t\t/**\n\t\t * The new active state of the output\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tStartRecord: undefined;\n\tStopRecord: {\n\t\t/**\n\t\t * File name for the saved recording\n\t\t */\n\t\toutputPath: string;\n\t};\n\tToggleRecordPause: undefined;\n\tPauseRecord: undefined;\n\tResumeRecord: undefined;\n\tSplitRecordFile: undefined;\n\tCreateRecordChapter: undefined;\n\tGetSceneItemList: {\n\t\t/**\n\t\t * Array of scene items in the scene\n\t\t */\n\t\tsceneItems: JsonObject[];\n\t};\n\tGetGroupSceneItemList: {\n\t\t/**\n\t\t * Array of scene items in the group\n\t\t */\n\t\tsceneItems: JsonObject[];\n\t};\n\tGetSceneItemId: {\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tGetSceneItemSource: {\n\t\t/**\n\t\t * Name of the source associated with the scene item\n\t\t */\n\t\tsourceName: string;\n\t\t/**\n\t\t * UUID of the source associated with the scene item\n\t\t */\n\t\tsourceUuid: string;\n\t};\n\tCreateSceneItem: {\n\t\t/**\n\t\t * Numeric ID of the scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tRemoveSceneItem: undefined;\n\tDuplicateSceneItem: {\n\t\t/**\n\t\t * Numeric ID of the duplicated scene item\n\t\t */\n\t\tsceneItemId: number;\n\t};\n\tGetSceneItemTransform: {\n\t\t/**\n\t\t * Object containing scene item transform info\n\t\t */\n\t\tsceneItemTransform: JsonObject;\n\t};\n\tSetSceneItemTransform: undefined;\n\tGetSceneItemEnabled: {\n\t\t/**\n\t\t * Whether the scene item is enabled. `true` for enabled, `false` for disabled\n\t\t */\n\t\tsceneItemEnabled: boolean;\n\t};\n\tSetSceneItemEnabled: undefined;\n\tGetSceneItemLocked: {\n\t\t/**\n\t\t * Whether the scene item is locked. `true` for locked, `false` for unlocked\n\t\t */\n\t\tsceneItemLocked: boolean;\n\t};\n\tSetSceneItemLocked: undefined;\n\tGetSceneItemIndex: {\n\t\t/**\n\t\t * Index position of the scene item\n\t\t */\n\t\tsceneItemIndex: number;\n\t};\n\tSetSceneItemIndex: undefined;\n\tGetSceneItemBlendMode: {\n\t\t/**\n\t\t * Current blend mode\n\t\t */\n\t\tsceneItemBlendMode: string;\n\t};\n\tSetSceneItemBlendMode: undefined;\n\tGetSceneList: {\n\t\t/**\n\t\t * Current program scene name. Can be `null` if internal state desync\n\t\t */\n\t\tcurrentProgramSceneName: string;\n\t\t/**\n\t\t * Current program scene UUID. Can be `null` if internal state desync\n\t\t */\n\t\tcurrentProgramSceneUuid: string;\n\t\t/**\n\t\t * Current preview scene name. `null` if not in studio mode\n\t\t */\n\t\tcurrentPreviewSceneName: string;\n\t\t/**\n\t\t * Current preview scene UUID. `null` if not in studio mode\n\t\t */\n\t\tcurrentPreviewSceneUuid: string;\n\t\t/**\n\t\t * Array of scenes\n\t\t */\n\t\tscenes: JsonObject[];\n\t};\n\tGetGroupList: {\n\t\t/**\n\t\t * Array of group names\n\t\t */\n\t\tgroups: string[];\n\t};\n\tGetCurrentProgramScene: {\n\t\t/**\n\t\t * Current program scene name\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * Current program scene UUID\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Current program scene name (Deprecated)\n\t\t */\n\t\tcurrentProgramSceneName: string;\n\t\t/**\n\t\t * Current program scene UUID (Deprecated)\n\t\t */\n\t\tcurrentProgramSceneUuid: string;\n\t};\n\tSetCurrentProgramScene: undefined;\n\tGetCurrentPreviewScene: {\n\t\t/**\n\t\t * Current preview scene name\n\t\t */\n\t\tsceneName: string;\n\t\t/**\n\t\t * Current preview scene UUID\n\t\t */\n\t\tsceneUuid: string;\n\t\t/**\n\t\t * Current preview scene name\n\t\t */\n\t\tcurrentPreviewSceneName: string;\n\t\t/**\n\t\t * Current preview scene UUID\n\t\t */\n\t\tcurrentPreviewSceneUuid: string;\n\t};\n\tSetCurrentPreviewScene: undefined;\n\tCreateScene: {\n\t\t/**\n\t\t * UUID of the created scene\n\t\t */\n\t\tsceneUuid: string;\n\t};\n\tRemoveScene: undefined;\n\tSetSceneName: undefined;\n\tGetSceneSceneTransitionOverride: {\n\t\t/**\n\t\t * Name of the overridden scene transition, else `null`\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * Duration of the overridden scene transition, else `null`\n\t\t */\n\t\ttransitionDuration: number;\n\t};\n\tSetSceneSceneTransitionOverride: undefined;\n\tGetSourceActive: {\n\t\t/**\n\t\t * Whether the source is showing in Program\n\t\t */\n\t\tvideoActive: boolean;\n\t\t/**\n\t\t * Whether the source is showing in the UI (Preview, Projector, Properties)\n\t\t */\n\t\tvideoShowing: boolean;\n\t};\n\tGetSourceScreenshot: {\n\t\t/**\n\t\t * Base64-encoded screenshot\n\t\t */\n\t\timageData: string;\n\t};\n\tSaveSourceScreenshot: undefined;\n\tGetStreamStatus: {\n\t\t/**\n\t\t * Whether the output is active\n\t\t */\n\t\toutputActive: boolean;\n\t\t/**\n\t\t * Whether the output is currently reconnecting\n\t\t */\n\t\toutputReconnecting: boolean;\n\t\t/**\n\t\t * Current formatted timecode string for the output\n\t\t */\n\t\toutputTimecode: string;\n\t\t/**\n\t\t * Current duration in milliseconds for the output\n\t\t */\n\t\toutputDuration: number;\n\t\t/**\n\t\t * Congestion of the output\n\t\t */\n\t\toutputCongestion: number;\n\t\t/**\n\t\t * Number of bytes sent by the output\n\t\t */\n\t\toutputBytes: number;\n\t\t/**\n\t\t * Number of frames skipped by the output's process\n\t\t */\n\t\toutputSkippedFrames: number;\n\t\t/**\n\t\t * Total number of frames delivered by the output's process\n\t\t */\n\t\toutputTotalFrames: number;\n\t};\n\tToggleStream: {\n\t\t/**\n\t\t * New state of the stream output\n\t\t */\n\t\toutputActive: boolean;\n\t};\n\tStartStream: undefined;\n\tStopStream: undefined;\n\tSendStreamCaption: undefined;\n\tGetTransitionKindList: {\n\t\t/**\n\t\t * Array of transition kinds\n\t\t */\n\t\ttransitionKinds: string[];\n\t};\n\tGetSceneTransitionList: {\n\t\t/**\n\t\t * Name of the current scene transition. Can be null\n\t\t */\n\t\tcurrentSceneTransitionName: string;\n\t\t/**\n\t\t * UUID of the current scene transition. Can be null\n\t\t */\n\t\tcurrentSceneTransitionUuid: string;\n\t\t/**\n\t\t * Kind of the current scene transition. Can be null\n\t\t */\n\t\tcurrentSceneTransitionKind: string;\n\t\t/**\n\t\t * Array of transitions\n\t\t */\n\t\ttransitions: JsonObject[];\n\t};\n\tGetCurrentSceneTransition: {\n\t\t/**\n\t\t * Name of the transition\n\t\t */\n\t\ttransitionName: string;\n\t\t/**\n\t\t * UUID of the transition\n\t\t */\n\t\ttransitionUuid: string;\n\t\t/**\n\t\t * Kind of the transition\n\t\t */\n\t\ttransitionKind: string;\n\t\t/**\n\t\t * Whether the transition uses a fixed (unconfigurable) duration\n\t\t */\n\t\ttransitionFixed: boolean;\n\t\t/**\n\t\t * Configured transition duration in milliseconds. `null` if transition is fixed\n\t\t */\n\t\ttransitionDuration: number;\n\t\t/**\n\t\t * Whether the transition supports being configured\n\t\t */\n\t\ttransitionConfigurable: boolean;\n\t\t/**\n\t\t * Object of settings for the transition. `null` if transition is not configurable\n\t\t */\n\t\ttransitionSettings: JsonObject;\n\t};\n\tSetCurrentSceneTransition: undefined;\n\tSetCurrentSceneTransitionDuration: undefined;\n\tSetCurrentSceneTransitionSettings: undefined;\n\tGetCurrentSceneTransitionCursor: {\n\t\t/**\n\t\t * Cursor position, between 0.0 and 1.0\n\t\t */\n\t\ttransitionCursor: number;\n\t};\n\tTriggerStudioModeTransition: undefined;\n\tSetTBarPosition: undefined;\n\tGetStudioModeEnabled: {\n\t\t/**\n\t\t * Whether studio mode is enabled\n\t\t */\n\t\tstudioModeEnabled: boolean;\n\t};\n\tSetStudioModeEnabled: undefined;\n\tOpenInputPropertiesDialog: undefined;\n\tOpenInputFiltersDialog: undefined;\n\tOpenInputInteractDialog: undefined;\n\tGetMonitorList: {\n\t\t/**\n\t\t * a list of detected monitors with some information\n\t\t */\n\t\tmonitors: JsonObject[];\n\t};\n\tOpenVideoMixProjector: undefined;\n\tOpenSourceProjector: undefined;\n}\n", "import createDebug from 'debug';\nimport {EventEmitter} from 'eventemitter3';\n// Import under alias so DOM's WebSocket type can be used\nimport WebSocketIpml from 'isomorphic-ws';\nimport type {Except, Merge, SetOptional} from 'type-fest';\n\nimport {WebSocketOpCode} from './types.js';\nimport type {OutgoingMessageTypes, OutgoingMessage, OBSEventTypes, IncomingMessage, IncomingMessageTypes, OBSRequestTypes, OBSResponseTypes, RequestMessage, RequestBatchExecutionType, RequestBatchRequest, RequestBatchMessage, ResponseMessage, ResponseBatchMessage, RequestBatchOptions} from './types.js';\nimport authenticationHashing from './utils/authenticationHashing.js';\n\nconst debug = createDebug('obs-websocket-js');\n\nexport class OBSWebSocketError extends Error {\n\tconstructor(public code: number, message: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport type EventTypes = Merge<{\n\tConnectionOpened: void;\n\tConnectionClosed: OBSWebSocketError;\n\tConnectionError: OBSWebSocketError;\n\tHello: IncomingMessageTypes[WebSocketOpCode.Hello];\n\tIdentified: IncomingMessageTypes[WebSocketOpCode.Identified];\n}, OBSEventTypes>;\n\n// EventEmitter expects {type: [value]} syntax while for us {type: value} is neater\ntype MapValueToArgsArray<T extends Record<string, unknown>> = {\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n\t[K in keyof T]: T[K] extends void ? [] : [T[K]];\n};\n\ntype IdentificationInput = SetOptional<Except<OutgoingMessageTypes[WebSocketOpCode.Identify], 'authentication'>, 'rpcVersion'>;\ntype HelloIdentifiedMerged = Merge<\nExclude<IncomingMessageTypes[WebSocketOpCode.Hello], 'authenticate'>,\nIncomingMessageTypes[WebSocketOpCode.Identified]\n>;\n\nexport abstract class BaseOBSWebSocket extends EventEmitter<MapValueToArgsArray<EventTypes>> {\n\tprotected static requestCounter = 1;\n\n\tprotected static generateMessageId(): string {\n\t\treturn String(BaseOBSWebSocket.requestCounter++);\n\t}\n\n\tprotected _identified = false;\n\tprotected internalListeners = new EventEmitter();\n\tprotected socket?: WebSocket;\n\tprotected abstract protocol: string;\n\n\tpublic get identified() {\n\t\treturn this._identified;\n\t}\n\n\t/**\n\t * Connect to an obs-websocket server\n\t * @param url Websocket server to connect to (including ws:// or wss:// protocol)\n\t * @param password Password\n\t * @param identificationParams Data for Identify event\n\t * @returns Hello & Identified messages data (combined)\n\t */\n\tasync connect(\n\t\turl = 'ws://127.0.0.1:4455',\n\t\tpassword?: string,\n\t\tidentificationParams: IdentificationInput = {},\n\t): Promise<HelloIdentifiedMerged> {\n\t\tif (this.socket) {\n\t\t\tawait this.disconnect();\n\t\t}\n\n\t\ttry {\n\t\t\tconst connectionClosedPromise = this.internalEventPromise<EventTypes['ConnectionClosed']>('ConnectionClosed');\n\t\t\tconst connectionErrorPromise = this.internalEventPromise<EventTypes['ConnectionError']>('ConnectionError');\n\n\t\t\treturn await Promise.race([\n\t\t\t\t(async () => {\n\t\t\t\t\tconst hello = await this.createConnection(url);\n\t\t\t\t\tthis.emit('Hello', hello);\n\t\t\t\t\treturn this.identify(hello, password, identificationParams);\n\t\t\t\t})(),\n\t\t\t\t// Choose the best promise for connection error/close\n\t\t\t\t// In browser connection close has close code + reason,\n\t\t\t\t// while in node error event has these\n\t\t\t\tnew Promise<never>((resolve, reject) => {\n\t\t\t\t\tvoid connectionErrorPromise.then(e => {\n\t\t\t\t\t\tif (e.message) {\n\t\t\t\t\t\t\treject(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tvoid connectionClosedPromise.then(e => {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t]);\n\t\t} catch (error: unknown) {\n\t\t\tawait this.disconnect();\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Disconnect from obs-websocket server\n\t */\n\tasync disconnect() {\n\t\tif (!this.socket || this.socket.readyState === WebSocketIpml.CLOSED) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst connectionClosedPromise = this.internalEventPromise('ConnectionClosed');\n\t\tthis.socket.close();\n\t\tawait connectionClosedPromise;\n\t}\n\n\t/**\n\t * Update session parameters\n\t * @param data Reidentify data\n\t * @returns Identified message data\n\t */\n\tasync reidentify(data: OutgoingMessageTypes[WebSocketOpCode.Reidentify]) {\n\t\tconst identifiedPromise = this.internalEventPromise<IncomingMessageTypes[WebSocketOpCode.Identified]>(`op:${WebSocketOpCode.Identified}`);\n\t\tawait this.message(WebSocketOpCode.Reidentify, data);\n\t\treturn identifiedPromise;\n\t}\n\n\t/**\n\t * Send a request to obs-websocket\n\t * @param requestType Request name\n\t * @param requestData Request data\n\t * @returns Request response\n\t */\n\tasync call<Type extends keyof OBSRequestTypes>(requestType: Type, requestData?: OBSRequestTypes[Type]): Promise<OBSResponseTypes[Type]> {\n\t\tconst requestId = BaseOBSWebSocket.generateMessageId();\n\t\tconst responsePromise = this.internalEventPromise<ResponseMessage<Type>>(`res:${requestId}`);\n\t\tawait this.message(WebSocketOpCode.Request, {\n\t\t\trequestId,\n\t\t\trequestType,\n\t\t\trequestData,\n\t\t} as RequestMessage<Type>);\n\t\tconst {requestStatus, responseData} = await responsePromise;\n\n\t\tif (!requestStatus.result) {\n\t\t\tthrow new OBSWebSocketError(requestStatus.code, requestStatus.comment);\n\t\t}\n\n\t\treturn responseData as OBSResponseTypes[Type];\n\t}\n\n\t/**\n\t * Send a batch request to obs-websocket\n\t * @param requests Array of Request objects (type and data)\n\t * @param options A set of options for how the batch will be executed\n\t * @param options.executionType The mode of execution obs-websocket will run the batch in\n\t * @param options.haltOnFailure Whether obs-websocket should stop executing the batch if one request fails\n\t * @returns RequestBatch response\n\t */\n\tasync callBatch(requests: RequestBatchRequest[], options: RequestBatchOptions = {}): Promise<ResponseMessage[]> {\n\t\tconst requestId = BaseOBSWebSocket.generateMessageId();\n\t\tconst responsePromise = this.internalEventPromise<ResponseBatchMessage>(`res:${requestId}`);\n\n\t\tawait this.message(WebSocketOpCode.RequestBatch, {\n\t\t\trequestId,\n\t\t\trequests,\n\t\t\t...options,\n\t\t});\n\n\t\tconst {results} = await responsePromise;\n\t\treturn results;\n\t}\n\n\t/**\n\t * Cleanup from socket disconnection\n\t */\n\tprotected cleanup() {\n\t\tif (!this.socket) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.socket.onopen = null;\n\t\tthis.socket.onmessage = null;\n\t\tthis.socket.onerror = null;\n\t\tthis.socket.onclose = null;\n\t\tthis.socket = undefined;\n\t\tthis._identified = false;\n\n\t\t// Cleanup leftovers\n\t\tthis.internalListeners.removeAllListeners();\n\t}\n\n\t/**\n\t * Create connection to specified obs-websocket server\n\t *\n\t * @private\n\t * @param url Websocket address\n\t * @returns Promise for hello data\n\t */\n\tprotected async createConnection(url: string) {\n\t\tconst connectionOpenedPromise = this.internalEventPromise('ConnectionOpened');\n\t\tconst helloPromise = this.internalEventPromise<IncomingMessageTypes[WebSocketOpCode.Hello]>(`op:${WebSocketOpCode.Hello}`);\n\n\t\tthis.socket = new WebSocketIpml(url, this.protocol) as unknown as WebSocket;\n\t\tthis.socket.onopen = this.onOpen.bind(this);\n\t\tthis.socket.onmessage = this.onMessage.bind(this);\n\t\tthis.socket.onerror = this.onError.bind(this) as (e: Event) => void;\n\t\tthis.socket.onclose = this.onClose.bind(this);\n\n\t\tawait connectionOpenedPromise;\n\t\tconst protocol = this.socket?.protocol;\n\t\t// Browsers don't autoclose on missing/wrong protocol\n\t\tif (!protocol) {\n\t\t\tthrow new OBSWebSocketError(-1, 'Server sent no subprotocol');\n\t\t}\n\n\t\tif (protocol !== this.protocol) {\n\t\t\tthrow new OBSWebSocketError(-1, 'Server sent an invalid subprotocol');\n\t\t}\n\n\t\treturn helloPromise;\n\t}\n\n\t/**\n\t * Send identify message\n\t *\n\t * @private\n\t * @param hello Hello message data\n\t * @param password Password\n\t * @param identificationParams Identification params\n\t * @returns Hello & Identified messages data (combined)\n\t */\n\tprotected async identify(\n\t\t{\n\t\t\tauthentication,\n\t\t\trpcVersion,\n\t\t\t...helloRest\n\t\t}: IncomingMessageTypes[WebSocketOpCode.Hello],\n\t\tpassword?: string,\n\t\tidentificationParams: IdentificationInput = {},\n\t): Promise<HelloIdentifiedMerged> {\n\t\t// Set rpcVersion if unset\n\t\tconst data: OutgoingMessageTypes[WebSocketOpCode.Identify] = {\n\t\t\trpcVersion,\n\t\t\t...identificationParams,\n\t\t};\n\n\t\tif (authentication && password) {\n\t\t\tdata.authentication = authenticationHashing(authentication.salt, authentication.challenge, password);\n\t\t}\n\n\t\tconst identifiedPromise = this.internalEventPromise<IncomingMessageTypes[WebSocketOpCode.Identified]>(`op:${WebSocketOpCode.Identified}`);\n\t\tawait this.message(WebSocketOpCode.Identify, data);\n\t\tconst identified = await identifiedPromise;\n\t\tthis._identified = true;\n\t\tthis.emit('Identified', identified);\n\n\t\treturn {\n\t\t\trpcVersion,\n\t\t\t...helloRest,\n\t\t\t...identified,\n\t\t};\n\t}\n\n\t/**\n\t * Send message to obs-websocket\n\t *\n\t * @private\n\t * @param op WebSocketOpCode\n\t * @param d Message data\n\t */\n\tprotected async message<Type extends keyof OutgoingMessageTypes>(op: Type, d: OutgoingMessageTypes[Type]) {\n\t\tif (!this.socket) {\n\t\t\tthrow new Error('Not connected');\n\t\t}\n\n\t\tif (!this.identified && op !== 1) {\n\t\t\tthrow new Error('Socket not identified');\n\t\t}\n\n\t\tconst encoded = await this.encodeMessage({\n\t\t\top,\n\t\t\td,\n\t\t} as OutgoingMessage);\n\t\tthis.socket.send(encoded);\n\t}\n\n\t/**\n\t * Create a promise to listen for an event on internal listener\n\t * (will be cleaned up on disconnect)\n\t *\n\t * @private\n\t * @param event Event to listen to\n\t * @returns Event data\n\t */\n\tprotected async internalEventPromise<ReturnVal = unknown>(event: string): Promise<ReturnVal> {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.internalListeners.once(event, resolve);\n\t\t});\n\t}\n\n\t/**\n\t * Websocket open event listener\n\t *\n\t * @private\n\t * @param e Event\n\t */\n\tprotected onOpen(e: Event) {\n\t\tdebug('socket.open');\n\t\tthis.emit('ConnectionOpened');\n\t\tthis.internalListeners.emit('ConnectionOpened', e);\n\t}\n\n\t/**\n\t * Websocket message event listener\n\t *\n\t * @private\n\t * @param e Event\n\t */\n\tprotected async onMessage(e: MessageEvent<string | Blob | ArrayBuffer>) {\n\t\ttry {\n\t\t\tconst {op, d} = await this.decodeMessage(e.data);\n\t\t\tdebug('socket.message: %d %j', op, d);\n\n\t\t\tif (op === undefined || d === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (op) {\n\t\t\t\tcase WebSocketOpCode.Event: {\n\t\t\t\t\tconst {eventType, eventData} = d;\n\t\t\t\t\t// @ts-expect-error Typescript just doesn't understand it\n\t\t\t\t\tthis.emit(eventType, eventData);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcase WebSocketOpCode.RequestResponse:\n\t\t\t\tcase WebSocketOpCode.RequestBatchResponse: {\n\t\t\t\t\tconst {requestId} = d;\n\t\t\t\t\tthis.internalListeners.emit(`res:${requestId}`, d);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.internalListeners.emit(`op:${op}`, d);\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tdebug('error handling message: %o', error);\n\t\t}\n\t}\n\n\t/**\n\t * Websocket error event listener\n\t *\n\t * @private\n\t * @param e ErrorEvent\n\t */\n\tprotected onError(e: ErrorEvent) {\n\t\tdebug('socket.error: %o', e);\n\t\tconst error = new OBSWebSocketError(-1, e.message);\n\n\t\tthis.emit('ConnectionError', error);\n\t\tthis.internalListeners.emit('ConnectionError', error);\n\t}\n\n\t/**\n\t * Websocket close event listener\n\t *\n\t * @private\n\t * @param e Event\n\t */\n\tprotected onClose(e: CloseEvent) {\n\t\tdebug('socket.close: %s (%d)', e.reason, e.code);\n\t\tconst error = new OBSWebSocketError(e.code, e.reason);\n\n\t\tthis.emit('ConnectionClosed', error);\n\t\tthis.internalListeners.emit('ConnectionClosed', error);\n\t\tthis.cleanup();\n\t}\n\n\t/**\n\t * Encode a message for specified protocol\n\t * @param data Outgoing message\n\t * @returns Outgoing message to send via websocket\n\t */\n\tprotected abstract encodeMessage(data: OutgoingMessage): Promise<string | Blob | ArrayBufferView>;\n\n\t/**\n\t * Decode a message for specified protocol\n\t * @param data Incoming message from websocket\n\t * @returns Parsed incoming message\n\t */\n\tprotected abstract decodeMessage(data: string | ArrayBuffer | Blob): Promise<IncomingMessage>;\n}\n\n// https://github.com/developit/microbundle/issues/531#issuecomment-575473024\n// Not using ESM export due to it also being detected and breaking rollup based bundlers (vite)\nif (typeof exports !== 'undefined') {\n\tObject.defineProperty(exports, '__esModule', {value: true});\n}\n", "import sha256 from 'crypto-js/sha256.js';\nimport Base64 from 'crypto-js/enc-base64.js';\n\n/**\n * SHA256 Hashing.\n * @param  {string} [salt=''] salt.\n * @param  {string} [challenge=''] challenge.\n * @param  {string} msg Message to encode.\n * @returns {string} sha256 encoded string.\n */\nexport default function (salt: string, challenge: string, msg: string): string {\n\tconst hash = Base64.stringify(sha256(msg + salt))!;\n\n\treturn Base64.stringify(sha256(hash + challenge))!;\n}\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "import {decode, encode} from '@msgpack/msgpack';\nimport {BaseOBSWebSocket} from './base.js';\nexport {OBSWebSocketError} from './base.js';\nexport type {EventTypes} from './base.js';\nimport type {IncomingMessage, OutgoingMessage} from './types.js';\nexport * from './types.js';\n\nexport class OBSWebSocket extends BaseOBSWebSocket {\n\tprotocol = 'obswebsocket.msgpack';\n\n\tprotected async encodeMessage(data: OutgoingMessage): Promise<ArrayBufferView> {\n\t\treturn encode(data);\n\t}\n\n\tprotected async decodeMessage(data: ArrayBuffer | Blob): Promise<IncomingMessage> {\n\t\t// Browsers provide Blob while node gives straight ArrayBuffer\n\t\tif (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t\t\tdata = await data.arrayBuffer();\n\t\t}\n\n\t\treturn decode(data as ArrayBuffer) as IncomingMessage;\n\t}\n}\n\nexport default OBSWebSocket;\n", "const defaultSettings = {\r\n  host: { value: 'default-host' },\r\n  port: { value: 0 },\r\n  password: { value: 'password' },\r\n};\r\n\r\nexport default defaultSettings;", "import { createDeskThing } from \"@deskthing/server\";\r\nimport { OBSToServer, OBSToClient } from \"./deskthingTypes\";\r\nimport OBSWebSocket from \"obs-websocket-js\";\r\nimport defaultSettings from \"../src/stores/defaultSettings.js\";\r\n\r\nconst DeskThing = createDeskThing<OBSToServer, OBSToClient>();\r\n\r\n\r\nexport class obsStore {\r\n\r\n    constructor(){\r\n        this.obs = new OBSWebSocket();\r\n        this.host = defaultSettings.host.value;\r\n        this.port = defaultSettings.port.value; \r\n        this.password = defaultSettings.password.value;\r\n        this.connected = false; \r\n    }\r\n    private host?: string;\r\n    private port?: number;\r\n    private password?: string;\r\n    private connected: boolean = false;\r\n    private obs: OBSWebSocket; \r\n    private static instance: obsStore | null = null;\r\n\r\n\r\n    // it seems you setup instances here - dont know why it was removed\r\n    static getInstance() {\r\n        if (!obsStore.instance) {\r\n            obsStore.instance = new obsStore();\r\n        }\r\n        return obsStore.instance;\r\n    }\r\n\r\n    async connect() {\r\n        try {\r\n\r\n            await this.obs.connect(`ws://${this.host}:${this.port}`, this.password);\r\n            this.connected = true;\r\n            } catch (err) {\r\n            this.connected = false;\r\n            setTimeout(() => this.connect(), 5000);\r\n            }\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.connected) {\r\n            this.obs.disconnect();\r\n            this.connected = false;\r\n        }\r\n    }\r\n\r\n    public async call(\r\n        requestType: string,\r\n        requestData?: any\r\n    ): Promise<any> {\r\n        return this.obs.call(requestType, requestData);\r\n    }\r\n\r\n    public getHost() {\r\n        return this.host;\r\n    }\r\n    public setHost(host: string) {\r\n        this.host = host;\r\n        DeskThing.send({ type: 'obsHostUpdated', payload: { host } });\r\n    }\r\n    public setPort(port: number) {\r\n        this.port = port;\r\n        DeskThing.send({ type: 'obsPortUpdated', payload: { port } });\r\n    }\r\n    public getPort() {\r\n        return this.port;\r\n    }\r\n    public setPassword(password: string) {\r\n        this.password = password;\r\n        DeskThing.send({ type: 'obsPasswordUpdated', payload: { password } });\r\n    }\r\n    public getPassword() {\r\n        return this.password;\r\n    }\r\n    public isConnected() {\r\n        return this.connected;\r\n    }\r\n};\r\n\r\nexport default obsStore.getInstance() // return the instance of the store rather than the store object itself", "import { DeskThing } from '@deskthing/server';\r\nimport { AppSettings, SETTING_TYPES} from '@deskthing/types';\r\n\r\n\r\nexport const  setupSettings = async () => {\r\n    const Settings: AppSettings = {\r\n        host: {\r\n            id: 'host',\r\n            type: SETTING_TYPES.STRING,\r\n            description: 'This will be \"localhost\" for control on the same machine, or the IP address of the OBS machine if remote.',\r\n            label: 'Host Name',\r\n            value: 'localhost',\r\n        },\r\n        port: {\r\n            id: 'port',\r\n            type: SETTING_TYPES.NUMBER,\r\n            description: 'The port number used by OBS Websocket. Default is 4455.',\r\n            label: 'Port Number',\r\n            value: 4455,\r\n        },\r\n        password: {\r\n            id: 'password',\r\n            type: SETTING_TYPES.STRING,\r\n            description: `The password for the OBS Websocket. Find in OBS under \r\n                            Tools -> WebSocket Server Settings -> Show Connect Info.`,\r\n            label: 'Password',\r\n            value: 'password',\r\n        },\r\n    }\r\n    DeskThing.initSettings(Settings);\r\n};\r\n", "// OBS Controller Backend for DeskThing\r\n// Requires: npm install obs-websocket-js\r\nimport { DESKTHING_EVENTS } from \"@deskthing/types\";\r\nimport { createDeskThing } from '@deskthing/server';\r\nimport { OBSToClient, OBSToServer } from './deskthingTypes.js';\r\nimport obsStore from './obsStore.js';\r\n\r\n// This is done in the emulator for development. See deskthing.config.js\r\n// dotenv.config(); // Load environment variables from .env file   \r\n\r\nconst DeskThing = createDeskThing<OBSToServer, OBSToClient>();\r\n\r\nconst obs = obsStore; // Get the singleton instance of obsStore\r\n\r\n// DeskThing event: Get scenes\r\nDeskThing.on('getScenes', async (data) => {\r\n  try {\r\n    const { scenes, currentProgramSceneName } = await obs.call('GetSceneList');\r\n    DeskThing.send({ type: 'scenes', payload: { scenes, current: currentProgramSceneName } });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to get scenes: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Switch scene\r\nDeskThing.on('switchScene', async (data) => {\r\n  try {\r\n    const sceneName = data.payload?.sceneName;\r\n    if (sceneName) {\r\n      await obs.call('SetCurrentProgramScene', { sceneName });\r\n      DeskThing.send({ type: 'sceneSwitched', payload: { sceneName } });\r\n    }\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to switch scene: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Get sources\r\nDeskThing.on('getSources', async () => {\r\n  try {\r\n    const { inputs } = await obs.call('GetInputList');\r\n    DeskThing.send({ type: 'sources', payload: inputs });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to get sources: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Toggle source visibility\r\nDeskThing.on('toggleSource', async (data) => {\r\n  try {\r\n    const { sourceName, visible } = data.payload;\r\n    await obs.call('SetInputSettings', { inputName: sourceName, inputSettings: { visible } });\r\n    DeskThing.send({ type: 'sourceToggled', payload: { sourceName, visible } });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to toggle source: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Get audio mixer\r\nDeskThing.on('getAudio', async () => {\r\n  try {\r\n    const { inputs } = await obs.call('GetInputList');\r\n\r\n    // Check that it is an array before using 'includes' to avoid an error\r\n    const audioInputs = inputs.filter(i => i.inputKind && Array.isArray(i.inputKind) && i.inputKind.includes('audio'))\r\n    const audioStatus = await Promise.all(audioInputs.map(async input => {\r\n\r\n      if (typeof input.inputName != 'string') return // skip over cases where it is not a string\r\n\r\n      // I'm getting a TS error that inputVolume and inputMuted might not exist. Instead, there is { inputVolumeMul: number; inputVolumeDb: number; } - I'm leaving it as this for the time being\r\n      const { inputVolume, inputMuted } = await obs.call('GetInputVolume', { inputName: input.inputName.toString() });\r\n      return { name: input.inputName.toString(), volume: inputVolume, muted: inputMuted };\r\n    }).filter(Boolean)) as {\r\n      name: string;\r\n      volume: any;\r\n      muted: any;\r\n    }[] // filter(Boolean) removes undefiend but doesn't correctly tell TS that it does, so we need to assert that there are no undefined values in the array\r\n\r\n    DeskThing.send({ type: 'audioMixer', payload: audioStatus });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to get audio mixer: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Set audio volume/mute\r\nDeskThing.on('setAudio', async (data) => {\r\n  try {\r\n    const { inputName, volume, muted } = data.payload;\r\n    if (typeof volume === 'number') {\r\n      await obs.call('SetInputVolume', { inputName, inputVolume: volume });\r\n    }\r\n    if (typeof muted === 'boolean') {\r\n      await obs.call('SetInputMute', { inputName, inputMute: muted });\r\n    }\r\n    DeskThing.send({ type: 'audioSet', payload: { inputName, volume, muted } });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to set audio: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Get streaming/recording status\r\nDeskThing.on('getStatus', async () => {\r\n  try {\r\n    const { outputActive: streaming } = await obs.call('GetStreamStatus');\r\n    const { outputActive: recording } = await obs.call('GetRecordStatus');\r\n    DeskThing.send({ type: 'status', payload: { streaming, recording } });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to get status: ' + err });\r\n  }\r\n});\r\n\r\n// DeskThing event: Start/stop streaming/recording\r\nDeskThing.on('setStreaming', async (data) => {\r\n  try {\r\n    const { streaming, recording } = data.payload;\r\n    if (typeof streaming === 'boolean') {\r\n      await obs.call(streaming ? 'StartStream' : 'StopStream');\r\n    }\r\n    if (typeof recording === 'boolean') {\r\n      await obs.call(recording ? 'StartRecord' : 'StopRecord');\r\n    }\r\n    DeskThing.send({ type: 'statusSet', payload: { streaming, recording } });\r\n  } catch (err) {\r\n    DeskThing.send({ type: 'log', payload: 'Failed to set streaming/recording: ' + err });\r\n  }\r\n});\r\n\r\n// TODO: Add preview image sending if feasible\r\n\r\n// DeskThing.on(DESKTHING_EVENTS.START, () => {\r\n//   DeskThing.send({ type: 'log', payload: 'OBS Controller App Started' });\r\n// });\r\n\r\n// DeskThing.on(DESKTHING_EVENTS.STOP, () => {\r\n//   DeskThing.send({ type: 'log', payload: 'OBS Controller App Stopped' });\r\n// });\r\n\r\nDeskThing.on(DESKTHING_EVENTS.PURGE, () => {\r\n  DeskThing.send({ type: 'log', payload: 'OBS Controller App Purged' });\r\n  console.log('Purging OBS Controller App');\r\n});\r\n", "// server\r\nimport {\r\n  AppSettings,\r\n  DESKTHING_EVENTS,\r\n  SETTING_TYPES,\r\n} from \"@deskthing/types\";\r\nimport obsStore from \"./obsStore\";\r\nimport { DeskThing } from '@deskthing/server';\r\nimport { setupSettings } from './setupSettings';\r\nimport './obsController'; // Integrate OBS controller backend\r\nimport { createLogger } from \"vite\";\r\n\r\nconst startup = async () => {\r\n  console.log(\"Inside startup function in index.ts\");\r\n  await obsStore.connect(); // Connect to OBS when DeskThing starts\r\n  console.log(\"Connected to OBS:\", obsStore.isConnected());\r\n  await setupSettings();\r\n}\r\n\r\n// Create a singleton instance of obsStore\r\n// const obsStoreInstance = new obsStore();\r\n\r\nDeskThing.on(DESKTHING_EVENTS.SETTINGS, (settings) => {\r\n  if (settings && settings.payload) {\r\n    const host = settings.payload.host.value?.toString() ?? \"\";\r\n    const port = Number(settings.payload.port.value);\r\n    const password = settings.payload.password.value?.toString() ?? \"\";\r\n\r\n    // Basic validation\r\n    if (!host || isNaN(port) || port <= 0) {\r\n      console.error(\"Invalid OBS connection settings:\", { host, port });\r\n      return;\r\n    }\r\n\r\n    console.debug(\"Settings updating:\", { host, port });\r\n    obsStore.setHost(host);\r\n    obsStore.setPort(port);\r\n    obsStore.setPassword(password);\r\n  } else {\r\n    console.warn(\"Settings payload is missing\");\r\n  }\r\n});\r\n\r\nconst stop = () => {\r\n    console.log('Stopping app');\r\n    obsStore.disconnect(); // Disconnect OBS when DeskThing stops\r\n    console.log('OBS Instance stopped');\r\n}\r\n\r\nconst purge = () => {\r\n    console.log('Purging app');\r\n    obsStore.disconnect(); // Disconnect OBS when DeskThing stops\r\n    console.log('OBS Instance stopped');\r\n}\r\n\r\n\r\n// Ideally, all of your code logic is held within the Startup function. Anything outside of this function wont reliably run\r\nDeskThing.on(DESKTHING_EVENTS.START, startup);\r\nDeskThing.on(DESKTHING_EVENTS.STOP, stop);\r\nDeskThing.on(DESKTHING_EVENTS.PURGE, purge);"],
  "mappings": "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",
  "names": ["exports", "exports", "createDebug", "debug", "self", "exports", "exports", "exports", "exports", "useColors", "debug", "exports", "exports", "EventEmitter", "exports", "exports", "exports", "exports", "data", "exports", "exports", "exports", "exports", "exports", "exports", "EventEmitter", "key", "exports", "err", "exports", "protocol", "exports", "EventEmitter", "exports", "require_node", "exports", "exports", "Math", "undefined", "exports", "Math", "n", "H", "exports", "Base64", "exports", "_a", "exports", "exports", "exports", "exports", "encode", "decode", "exports", "exports", "exports", "encode", "exports", "exports", "exports", "exports", "_a", "exports", "decode", "exports", "exports", "exports", "SETTING_TYPES", "DESKTHING_DEVICE", "DESKTHING_EVENTS", "SETTING_TYPES", "SETTING_TYPES2", "DESKTHING_DEVICE", "DESKTHING_DEVICE2", "DESKTHING_EVENTS", "DESKTHING_EVENTS2", "Base64", "sha256", "createDebug", "EventEmitter", "resolve", "WebSocketIpml", "_a", "DeskThing", "DeskThing"]
}
